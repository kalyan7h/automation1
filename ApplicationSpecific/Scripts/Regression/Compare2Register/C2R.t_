[ ] // *********************************************************
[+] // FILE NAME:	<C2R.t>
	[ ] //
	[ ] // DESCRIPTION:
	[ ] //   <This script contains all Compare 2 register test cases>
	[ ] //
	[ ] // DEPENDENCIES:	<include.inc>
	[ ] //
	[ ] // DEVELOPED BY:	Anagha Bhandare
	[ ] //			
	[ ] // REVISION HISTORY:
	[ ] // 	  Nov 18, 2013		Anagha	created
[ ] // *********************************************************
[ ] 
[ ] // ==========================================================
[+] // INCLUDED FILES
	[ ] use "..\..\FrameworkSpecific\FrameworkFiles\Includes.inc" 	
	[ ] 
[ ] // ==========================================================
[-] // Global variables
	[ ] public STRING sCmdLine = "{QUICKEN_ROOT}\qw.exe"
	[ ] 
	[ ] public STRING sActual,sHandle,sCaption,sAccount,sAccept,sMessage,sAccepted,sUserName,sPassword,sDataFile,sSourceFile
	[ ] public INTEGER iSetupAutoAPI,iOpenDataFile,iXcord,iYcord,iSelect,iCounter,iRow,i,j,iResult
	[ ] public BOOLEAN bCaption,bExists,bMatch,bCheckStatus
	[ ] LIST OF STRING lsPayeeName
	[ ] public STRING sDateFormate="m/d/yyyy"
	[ ] 
	[ ] STRING sDateStamp = FormatDateTime (GetDateTime(), sDateFormate) 
	[ ] 
	[ ] public STRING WindowName = "MDI"
	[ ] 
[ ] // ==========================================================
[ ] // Global Function
[+] // ==========================================================
	[-] public Integer ActivateDownload(STRING sUserName, STRING sPassword)
		[-] // Variable Declaration
			[ ] STRING sErrorMsg
			[ ] BOOLEAN  bFlag
		[ ] 
		[ ] bFlag = FALSE
		[ ] 
		[-] do
			[-] if(AddAnyAccount.Exists(20) && AddAnyAccount.IsEnabled())
				[ ] AddAnyAccount.SetActive ()
				[ ] 
				[ ] AddAnyAccount.BankUserID.SetText(sUserName)      
				[ ] AddAnyAccount.BankPassword.SetText(sPassword)   
				[ ] WaitforState(AddAnyAccount.Next,TRUE,20)
				[-] if(AddAnyAccount.Next.IsEnabled() == FALSE)			
					[ ] ReportStatus("Verify Next Button Status", FAIL, "Connect (Next) button is disabled")
					[ ] bFlag = TRUE
					[ ] 
				[-] else
					[ ] AddAnyAccount.Next.Click ()
					[ ] sleep(30)
					[ ] AddAnyAccount.Next.Click ()
					[ ] WaitForstate(AddAnyAccount,FALSE,180)
					[-] if(AddAnyAccount.Exists(30) == TRUE)
						[-] while(AlertMessage.Exists(10))		// check whether any error message "Quicken is not able to connect to internet" is displayed or not
							[ ] AlertMessage.OK.Click ()
							[ ] goto ErrorMessage				
							[ ] 
						[ ] 
						[+] if(AddAnyAccount.Exists(10))
							[-] if(AddAnyAccount.BankUserID.Exists () == TRUE)			// for invalid user id/password, login window is displayed again with error message
								[ ] sErrorMsg = AddAnyAccount.ErrorMessage.GetText ()
								[ ] ReportStatus("Verify Error Message", WARN, "Error Message - {sErrorMsg} is displayed")
								[ ] bFlag = TRUE
							[ ] 
							[ ] ErrorMessage:
							[-] if(AddAnyAccount.ErrorMessage.Exists (10))
								[ ] AddAnyAccount.SetActive()
								[ ] sErrorMsg = AddAnyAccount.ErrorMessage.GetText ()
								[ ] ReportStatus("Verify Error Message", WARN, "Error Message - {sErrorMsg} is displayed")
								[ ] goto CloseWindow
								[ ] 
					[-] if(AccountAdded.Exists(140) == TRUE)
							[ ] AccountAdded.VerifyEnabled(TRUE, 5)
							[ ] AccountAdded.SetActive ()
							[ ] AccountAdded.Finish.Click()
							[ ] bFlag = FALSE
				[-] if(bFlag == TRUE)
					[-] CloseWindow:								// Close the window
						[ ] bFlag = TRUE
						[ ] AddAnyAccount.SetActive()
						[ ] AddAnyAccount.Cancel.Click()  				
						[-] if(AlertMessage.Exists(SHORT_SLEEP))
							[ ] AlertMessage.SetActive()
							[ ] AlertMessage.OK.Click()
				[ ] 
				[-] // if(bFlag == FALSE)
					[ ] // ReportStatus("Verify Account", PASS, "{sBankName} account is added")
			[-] else
				[ ] ReportStatus("Verify Activate One Step Update dialog exists.", FAIL, "Verify Activate One Step Update dialog exists: Activate One Step Update dialog didn't appear.")
			[ ] 
			[ ] iFunctionResult = PASS
			[ ] 
		[-] except
			[ ] ExceptLog()
			[ ] iFunctionResult = FAIL
			[ ] 
		[ ] 
		[ ] return iFunctionResult
	[ ] 
[ ] 
[+] //#############  C2R SetUp ######################################################################
	[ ] // ********************************************************
	[+] // TestCase Name:	C2R_SetUp()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will setup the necessary pre-requisite for tests
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase C2R_SetUp() appstate QuickenBaseState
	[ ] 
	[ ] //------------------ Variable declaration------------------
	[ ] STRING sFileName = "Compare2Register"
	[ ] sDataFile = AUT_DATAFILE_PATH + "\" + sFileName + ".QDF"
	[ ] sSourceFile = AUT_DATAFILE_PATH + "\C2R Data File\" + sFileName + ".QDF"
	[ ] 
	[ ] iSetupAutoAPI = SetUp_AutoApi()
	[ ] ReportStatus("AutoAPI Setup", iSetupAutoAPI, "AutoAPI Setup is completed") 
	[ ] 
	[-] if(FileExists(sDataFile) == TRUE)
		[-] if(QuickenWindow.Exists(SHORT_SLEEP))
			[ ] QuickenWindow.Kill()
			[ ] WaitForState(QuickenWindow,FALSE,5)
		[ ] DeleteFile(sDataFile)
	[ ] CopyFile(sSourceFile,sDataFile)
	[+] if (!QuickenWindow.Exists())
		[ ] App_Start(sCmdLine)
		[ ] WaitForState(QuickenWindow, TRUE ,10)
	[ ] 
	[ ] //------------------ Create Data File------------------
	[ ] iOpenDataFile = OpenDataFile(sFileName)
	[ ] 
	[ ] // ------------------Report Staus If Data file opened successfully------------------
	[-] if ( iOpenDataFile  == PASS)
		[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is opened")
		[ ] //RegisterQuickenConnectedServices()
	[-] else 
		[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is not opened")
	[ ] 
	[ ] //------------------ Set Classic View------------------
	[ ] SetViewMode(VIEW_CLASSIC_MENU)
	[ ] //------------------ Select Home tab------------------
	[ ] NavigateQuickenTab(sTAB_HOME)
	[ ] //------------------Off Popup Register------------------
	[ ] UsePopUpRegister("OFF")
	[ ] sleep(1)
	[ ] 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //############# Accept Button present on each Transaction in C2R #######################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test01_AcceptButtonOnTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Accept' button in 
		[ ] //front of every transaction in C2R window.
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Accept button in front of every transaction works						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test01_AcceptButtonOnTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] sAccount = "Checking 11" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iCounter=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetItemCount()*2
			[ ] //------------------Verify the Accept Button for each transaction------------------
			[-] for(iRow=1,i=1;iRow<=iCounter;iRow=iRow+2,i++)
				[ ] 
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(iRow))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Accept Button available",PASS,"Accept Button is available in C2R for '{lsPayeeName[i]}' transaction ")
				[+] else
					[ ] ReportStatus("Check the Accept Button available",FAIL,"Accept Button is not available in C2R for '{lsPayeeName[i]}' transaction")
				[ ] 
				[ ] 
			[ ] //------------------Verify the Accepted status for each transaction after click the Accept Button------------------
			[-] for(iRow=0,i=1;iRow<iCounter;iRow=iRow+2,i++)
				[ ] 
				[ ] //------------------Click on Accept Button to accept------------------
				[ ] 
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(iRow))
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,iXcord,iYcord)
				[ ] 
				[ ] sleep(1)
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(iRow))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the transaction '{lsPayeeName[i]}' is 'Accepted' after clicking on Accept Button in C2R")
					[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
					[ ] iResult=FindTransaction(WindowName,lsPayeeName[i])
					[+] if(iResult==PASS)
						[ ] 
						[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
					[+] else
						[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
					[ ] 
				[+] else
					[ ] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the transaction '{lsPayeeName[i]}'  is not 'Accepted' after clicking on Accept Button in C2R")
					[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
					[ ] iResult=FindTransaction("MDI",lsPayeeName[i])
					[ ] 
					[+] if(iResult==PASS)
						[ ] 
						[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R ,Still status is not changed to Accepted")
					[+] else
						[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R,as status is not changed to Accepted")
					[ ] 
					[ ] 
				[ ] //The 'Y' co-ordinates is increment as per the next transaction
				[ ] iYcord=iYcord+18
				[ ] 
				[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Accept Button present and functionality on bottom of the C2R ###############################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test02_AcceptButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Accept' button at the 
		[ ] //bottom of the C2R window.
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Accept button in front of every transaction works										
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test02_AcceptButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 12" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] WindowName = "MDI"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Accept Button present on bottom of the C2R window------------------
			[-] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Exists())
				[ ] ReportStatus("Check Accept Button present",PASS,"Accept Button is present on the bottom of the C2R window")
				[ ] 
				[ ] iCounter=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetItemCount()*2
				[ ] 
				[ ] //------------------Verify the Accepted status for each transaction after click the Accept Button------------------
				[-] for(iRow=0,i=1;iRow<iCounter;iRow=iRow+2,i++)
					[ ] 
					[ ] //------------------Click on Accept Button to accept------------------
					[ ] 
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(iRow))
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(iRow))
					[ ] 
					[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
					[ ] 
					[+] if(bMatch==TRUE)
						[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the transaction '{lsPayeeName[i]}' is 'Accepted' after clicking on Accept Button in C2R")
						[ ] 
					[+] else
						[ ] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the transaction '{lsPayeeName[i]}'  is not 'Accepted' after clicking on Accept Button in C2R")
					[ ] 
					[ ] 
				[ ] 
				[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
				[-] for(i=1;i<=ListCount(lsPayeeName);i++)
					[ ] 
					[ ] iResult=FindTransaction(WindowName,lsPayeeName[i])
					[ ] 
					[+] if(iResult==PASS)
						[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
						[ ] 
						[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.IsEnabled())
							[ ] ReportStatus("Check Accept Button disabled",PASS,"Accept Button is disabled on the bottom of the C2R window")
						[+] else
							[ ] ReportStatus("Check Accept Button disabled",FAIL,"Accept Button is enabled on the bottom of the C2R window")
						[ ] 
					[+] else
						[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
					[ ] 
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Accept Button present",FAIL,"Accept Button is present on the bottom of the C2R window")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Help Button present and functionality on bottom of the C2R window ###########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test03_HelpButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Help' button at the bottom of the C2R window.
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Help' button at the bottom of the C2R window.							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test03_HelpButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] sAccount = "Checking 12" 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Accept Button present on bottom of the C2R window------------------
			[-] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HelpIcon.Exists())
				[ ] ReportStatus("Check Help Button present",PASS,"Help Button is present on the bottom of the C2R window")
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HelpIcon.Click()
				[ ] Sleep(2)
				[ ] //------------------Help Dialog gets opened------------------
				[-] if(QuickenHelp.Exists())
					[ ] ReportStatus("Verify Help Dialog ", PASS , "Help Dialog is present ")
					[ ] QuickenHelp.Close()
				[+] else
					[ ] ReportStatus("Verify Help Dialog", FAIL , "Help Dialog is not present")
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Help Button present",FAIL,"Help Button is not present on the bottom of the C2R window")
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Accept All Button present and functionality on bottom of the C2R window ######################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test04_AcceptAllButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Accept All' button at the bottom of the C2R window. 
		[ ] //bottom of the C2R window.
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Accept All' button at the bottom of the C2R window. 					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test04_AcceptAllButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 13" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] WindowName = "MDI"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Accept All Button present on bottom of the C2R window------------------
			[ ] 
			[-] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Exists())
				[ ] 
				[ ] ReportStatus("Check Accept All Button present",PASS,"Accept All Button is present on the bottom of the C2R window")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
				[ ] 
				[-] for(i=1;i<=ListCount(lsPayeeName);i++)
					[ ] 
					[ ] iResult=FindTransaction(WindowName,lsPayeeName[i])
					[ ] 
					[-] if(iResult==PASS)
						[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
					[-] else
						[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
					[ ] 
				[ ] 
				[ ] QuickenWindow.SetActive()
				[ ] 
				[ ] MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.DoubleClick()
				[ ] 
				[ ] Sleep(1)
				[ ] 
				[ ] //------------------Verify the Accept all button is renamed to 'Undo Accept All'-----------------
				[ ] 
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.GetCaption()
				[ ] 
				[-] if(sCaption=="Undo Accept All")
					[ ] ReportStatus("Check Accept all button is renamed",PASS,"Accept all button is renamed to 'Undo Accept All' in C2R window")
				[-] else
					[ ] ReportStatus("Check Accept all button is renamed",FAIL,"Accept all button is renamed to 'Undo Accept All' in C2R window")
					[ ] 
				[ ] //------------------Verify the "There are no downloaded transactions to accept." message is displayed.------------------
				[ ] 
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(1))
				[ ] 
				[ ] bMatch= MatchStr("*{sMessage}*",sActual)
				[ ] 
				[-] if(bMatch==TRUE)
					[ ] ReportStatus("Check Message in C2R window",PASS,"'There are no downloaded transactions to accept.' message is displayed.")
				[-] else
					[ ] ReportStatus("Check Message in C2R window",FAIL,"'There are no downloaded transactions to accept.' message is not displayed.")
					[ ] 
				[ ] //------------------Verify the Accept, Hide Accepted buttons are disabled.------------------
				[ ] 
				[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.IsEnabled())
					[ ] 
					[ ] ReportStatus("Check Accept Button disabled",PASS,"Accept Button is disabled on the bottom of the C2R window")
					[ ] 
				[+] else
					[ ] ReportStatus("Check Accept Button disabled",FAIL,"Accept Button is enabled on the bottom of the C2R window")
					[ ] 
				[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.IsEnabled())
					[ ] 
					[ ] ReportStatus("Check Hide Accepted Button disabled",PASS,"Hide Accepted Button is disabled on the bottom of the C2R window")
					[ ] 
				[+] else
					[ ] 
					[ ] ReportStatus("Check Hide Accepted Button disabled",FAIL,"Hide Accepted Button is enabled on the bottom of the C2R window")
				[ ] 
			[+] else
				[ ] ReportStatus("Check Accept Button present",FAIL,"Accept Button is present on the bottom of the C2R window")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Finish Later Button present and functionality on bottom of the C2R window ######################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test06_FinishLaterButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Finish Later' button at the bottom of the C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Finish Later' button at the bottom of the C2R window.					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test06_FinishLaterButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Finish Later Button present on bottom of the C2R window------------------
			[ ] 
			[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.FinishLater.Exists())
				[ ] 
				[ ] ReportStatus("Check Finish Later Button present",PASS,"Finish Later Button is present on the bottom of the C2R window")
				[ ] 
				[ ] //------------------Click on Finish Later Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.FinishLater.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] 
				[ ] //------------------Verify the Accept, Hide Accepted buttons are disabled.------------------
				[ ] 
				[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Exists())
					[ ] 
					[ ] ReportStatus("Check Accept Button exists",PASS,"C2R window got minimized as Accept Button not exists")
					[ ] 
				[+] else
					[ ] ReportStatus("Check Accept Button exists",FAIL,"C2R window not got minimized as Accept Button not exists")
					[ ] 
				[ ] 
				[ ] //------------------Verify all transactions are in C2R window.------------------
				[ ] QuickenWindow.SetActive()
				[ ] 
				[ ] MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.Click(1.13,5)
				[ ] //MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.Click()
				[ ] 
				[ ] Sleep(1)
				[ ] 
				[ ] 
				[+] for(iRow=1,i=1;iRow<=iCounter;iRow=iRow+2,i++)
					[ ] 
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(iRow))
					[ ] 
					[ ] bMatch= MatchStr("*{sAccept}*",sActual)
					[ ] 
					[+] if(bMatch==TRUE)
						[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[i]}' transaction is available in C2R")
					[+] else
						[ ] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[i]}' transaction is not available in C2R")
				[ ] 
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Finish Later Button present",FAIL,"Finish Later Button is present on the bottom of the C2R window")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Renaming Rules Button present and functionality on bottom of the C2R window ##################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test07_RenamingRulesButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Renaming Rules' button at the bottom of the C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Renaming Rules' button at the bottom of the C2R window.						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test07_RenamingRulesButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Renaming Rules Button present on bottom of the C2R window------------------
			[ ] 
			[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.RenamingRules.Exists())
				[ ] 
				[ ] ReportStatus("Check Renaming Rules Button present",PASS,"Renaming Rules Button is present on the bottom of the C2R window")
				[ ] 
				[ ] //------------------Click onRenaming Rules Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.RenamingRules.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Renaming Rules Dialog gets opened------------------
				[+] if(RenamingRules.Exists())
					[ ] ReportStatus("Verify Renaming Rules Dialog ", PASS , "Renaming Rules Dialog is present ")
					[ ] RenamingRules.Done.Click()
				[+] else
					[ ] ReportStatus("Verify Renaming Rules Dialog", FAIL , "Renaming Rules Dialog is not present")
				[ ] 
				[ ] 
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Renaming Rules Button present",FAIL,"Renaming Rules Button is present on the bottom of the C2R window")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Hide Accepted Button present and functionality on bottom of the C2R window ##################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test08_HideAcceptedButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Hide Accepted' button at the bottom of C2R window
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Hide Accepted' button at the bottom of C2R window							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test08A_HideAcceptedButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Hide Accepted Button present on bottom of the C2R window------------------
			[ ] 
			[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.Exists())
				[ ] 
				[ ] ReportStatus("Check Hide Accepted Button present",PASS,"Hide Accepted Button is present on the bottom of the C2R window")
				[ ] 
				[ ] //Verify  'Hide Accepted' button is disabled.
				[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.IsEnabled())
					[ ] 
					[ ] ReportStatus("Check Hide Accepted Button is not enabled",PASS,"Hide Accepted Button is not enabled on the bottom of the C2R window")
					[ ] 
					[ ] //Accept first transaction from C2R
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(1))
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
					[ ] 
					[ ] bMatch= MatchStr("*{sAccept}*",sActual)
					[ ] 
					[+] if(bMatch==TRUE)
						[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[1]}' transaction is available in C2R")
					[+] else
						[ ] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[1]}' transaction is not available in C2R")
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[ ] //Verify the transaction in Register
					[ ] iResult=FindTransaction("MDI",lsPayeeName[1])
					[ ] 
					[+] if(iResult==PASS)
						[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[1]}' transaction is available in Register")
					[+] else
						[ ] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[1]}' transaction is available in Register")
						[ ] 
					[ ] 
					[ ] Sleep(1)
					[ ] 
					[ ] //Verify  'Hide Accepted' button is enabled.
					[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.IsEnabled())
						[ ] 
						[ ] ReportStatus("Check Hide Accepted Button is  enabled",PASS,"Hide Accepted Button is enabled on the bottom of the C2R window")
						[ ] 
						[ ] //Click on Hide Accepted Button to verify the functionality
						[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.Click()
						[ ] 
						[ ] Sleep(1)
						[ ] 
						[ ] //Verify the accepted transaction in C2R after clicking on Hide Accepted
						[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
						[ ] 
						[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(1))
						[ ] 
						[ ] bMatch= MatchStr("*{sAccept}*",sActual)
						[ ] 
						[+] if(bMatch==FALSE)
							[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[1]}' transaction is available in C2R")
						[+] else
							[ ] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[1]}' transaction is not available in C2R")
						[ ] 
						[ ] //Verify the Caption of Hide Accepted button to change to Show Accepted
						[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.GetCaption()
						[ ] 
						[+] if(sCaption=="Show Accepted")
							[ ] 
							[ ] ReportStatus("Check Show Accepted Button is enabled",PASS,"Show Accepted Button is enabled on the bottom of the C2R window")
							[ ] 
						[+] else
							[ ] ReportStatus("Check Show Accepted Button is enabled",FAIL,"Show Accepted Button is not enabled on the bottom of the C2R window")
						[ ] 
						[ ] 
						[ ] 
					[+] else
						[ ] ReportStatus("Check Hide Accepted Button is not enabled",FAIL,"Hide Accepted Button is not enabled on the bottom of the C2R window")
						[ ] 
					[ ] 
				[+] else
					[ ] ReportStatus("Check Hide Accepted Button is enabled",FAIL,"Hide Accepted Button is enabled on the bottom of the C2R window")
					[ ] 
					[ ] 
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Hide Accepted Button present",FAIL,"Hide Accepted Button is present on the bottom of the C2R window")
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Show Accepted Button present and functionality on bottom of the C2R window ##################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test08_HideAcceptedButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Hide Accepted' button at the bottom of C2R window
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Hide Accepted' button at the bottom of C2R window						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test08B_ShowAcceptedButtonOnBottomOfC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","Max","Sam","David","Tom"}
	[ ] 
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Hide Accepted Button present on bottom of the C2R window------------------
			[ ] 
			[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.Exists())
				[ ] 
				[ ] ReportStatus("Check Hide Accepted Button present",PASS,"Hide Accepted Button is present on the bottom of the C2R window")
				[ ] 
				[ ] //Verify the Caption of Hide Accepted button to change to Show Accepted
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.GetCaption()
				[ ] 
				[+] if(sCaption=="Show Accepted")
					[ ] 
					[ ] ReportStatus("Check Show Accepted Button is enabled",PASS,"Show Accepted Button is enabled on the bottom of the C2R window")
					[ ] 
					[ ] //Click on Hide Accepted Button to verify the functionality
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HideAccepted.Click()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[ ] //Accept first transaction from C2R
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(1))
					[ ] 
					[ ] bMatch= MatchStr("*{sAccept}*",sActual)
					[ ] 
					[+] if(bMatch==TRUE)
						[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[1]}' transaction is available in C2R")
					[+] else
						[ ] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[1]}' transaction is not available in C2R")
					[ ] 
					[ ] 
					[ ] 
				[+] else
					[ ] ReportStatus("Check Show Accepted Button is enabled",FAIL,"Show Accepted Button is not enabled on the bottom of the C2R window")
					[ ] 
					[ ] 
			[+] else
				[ ] ReportStatus("Check Hide Accepted Button is enabled",FAIL,"Hide Accepted Button is enabled on the bottom of the C2R window")
				[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
		[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu-Delete Transaction in C2R ###################################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test09_EditMenuDeleteTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can delete downloaded transactions from C2R.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can delete downloaded transactions from C2R.					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test09_EditMenuDeleteTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Edit"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="Accepted"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(3))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
			[ ] 
			[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.GetCaption()
			[ ] 
			[-] if(sCaption=='Delete')
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Delete-Edit Menu option is present")
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
				[ ] 
			[-] else
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Delete-Edit Menu option is not present")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] 
			[-] if(AlertMessage.Exists())
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[-] if(sMessage =="Delete the download transaction?")
					[ ] 
					[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
					[ ] 
					[ ] AlertMessage.Yes.Click()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
					[ ] 
					[ ] bMatch= MatchStr("*{lsPayeeName[2]}*",sActual)
					[ ] 
					[-] if(bMatch==FALSE)
						[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction got deleted Successfully ")
					[-] else
						[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction not got deleted Successfully ")
					[ ] 
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(3))
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[-] if(AlertMessage.Exists())
						[ ] 
						[ ] sMessage=AlertMessage.MessageText.GetText()
						[ ] 
						[-] if(sMessage =="Delete the download transaction?")
							[ ] 
							[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
							[ ] 
							[ ] AlertMessage.No.Click()
							[ ] 
							[ ] Sleep(2)
							[ ] 
							[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
							[ ] 
							[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
							[ ] 
							[ ] bMatch= MatchStr("*{lsPayeeName[3]}*",sActual)
							[ ] 
							[-] if(bMatch==TRUE)
								[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction not got deleted successfully ")
							[-] else
								[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction got deleted successfully ")
							[ ] 
							[ ] 
							[ ] 
						[-] else
							[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
					[ ] 
				[+] else
					[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
			[+] else
				[ ] ReportStatus("Check Delete transaction confirmation window",FAIL,"Delete transaction confirmation window is not present")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu- Match Manually Transaction in C2R ###########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test10_MatchManuallyTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can match transactions in C2R to checking register using 'Match Manually' option.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can match transactions in C2R to checking register using 'Match Manually' option					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test10_MatchManuallyTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Edit"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="Accepted"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
			[ ] 
			[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
			[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MatchManually.GetCaption()
			[ ] 
			[-] if(sCaption=='Match Manually')
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Match Manually-Edit Menu option is present")
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MatchManually.Pick()
				[ ] 
			[-] else
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Match Manually-Edit Menu option is not present")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] //--------------------------Verify the Message for Match Manually-----------------------------------
			[-] if(AlertMessage.Exists())
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[+] if(sMessage =="There are no transactions to match.")
					[ ] 
					[ ] ReportStatus("Match Manually -Edit menu in C2R",PASS,"Edit Menu-Match Manually downloaded transactions from C2R")
					[ ] 
					[ ] AlertMessage.Yes.Click()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
					[ ] 
					[ ] bMatch= MatchStr("*{lsPayeeName[2]}*",sActual)
					[ ] 
					[+] if(bMatch==FALSE)
						[ ] ReportStatus("Check the Edit Menu-Match Manually for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction got matched manually ")
					[+] else
						[ ] ReportStatus("Check the Edit Menu-Match Manually for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction not got matched manually ")
					[ ] 
					[ ] 
				[+] else
					[ ] ReportStatus("Match Manually -Edit menu in C2R",FAIL,"Edit Menu-Match Manually downloaded transactions from C2R message is not present")
				[ ] 
			[-] else
				[ ] 
				[-] if(ManuallyMatchTransactions.Exists())
					[ ] ReportStatus("Match Manually -Edit menu in C2R",PASS,"Edit Menu-Match Manually downloaded transactions from C2R")
					[ ] 
				[-] else
					[ ] ReportStatus("Match Manually -Edit menu in C2R",FAIL,"Edit Menu-Match Manually downloaded transactions window not available")
			[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu- Make New Transaction in C2R ###############################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test11_MakeNewTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can change the status of matched transactions to New' using 'Make New' option.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can change the status of matched transactions to New' using 'Make New' option							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test11_MakeNewTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Match"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="New"
	[ ] sPayee="Test2"
	[ ] WindowName = "MDI"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iResult=FindTransaction(WindowName,sPayee)
			[ ] 
			[+] if(iResult==PASS)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'Match' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is not as 'Match' ")
				[ ] 
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
				[ ] 
				[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeNew.GetCaption()
				[ ] 
				[+] if(sCaption=='Make New')
					[ ] 
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Make New-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeNew.Pick()
					[ ] 
				[+] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Make New-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New'  ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
				[ ] 
				[ ] iResult=FindTransaction("MDI",lsPayeeName[1])
				[ ] 
				[+] if(iResult==PASS)
					[ ] ReportStatus("Check transaction is added as a new transaction",PASS,"Transaction is added as a new transaction ")
				[+] else
					[ ] ReportStatus("Check transaction is added as a new transaction",FAIL,"Transaction is added as a new transaction ")
				[ ] 
			[+] else
				[ ] ReportStatus("Find matched transaction in Register",FAIL,"Matched transaction in Register is not found")
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu- Make All New Transaction in C2R #############################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test12_MakeAllNewTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can change the status of all matched transactions to 'New' using 'Make all New' options.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can change the status of all matched transactions to 'New' using 'Make all New' options.				
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test12_MakeAllNewTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Match"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="New"
	[ ] sPayee="Test3"
	[ ] WindowName = "MDI"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iResult=FindTransaction(WindowName,sPayee)
			[ ] 
			[+] if(iResult==PASS)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(5))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'Match' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is not as 'Match' ")
				[ ] 
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
				[ ] 
				[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeAllNew.GetCaption()
				[ ] 
				[+] if(sCaption=='Make All New')
					[ ] 
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Make All New-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeAllNew.Pick()
					[ ] 
				[+] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Make All New-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(5))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
			[+] else
				[ ] ReportStatus("Find matched transaction in Register",FAIL,"Matched transaction in Register is not found")
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu-UnMatch Transaction in C2R #################################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test13_UnMatchTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify functionality of 'Unmatch' option in Edit menu when Banking 
		[ ] //register contains more than one transactions matching to the single downloaded transactions in C2R.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If functionality of 'Unmatch' option in Edit menu works correctly						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test13_UnMatchTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Match"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="New"
	[ ] sPayee="Test1"
	[ ] WindowName = "MDI"
	[ ] 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iResult=FindTransaction(WindowName,sPayee)
			[ ] 
			[+] if(iResult==PASS)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'Match' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is not as 'Match' ")
				[ ] 
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
				[ ] 
				[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.UnMatch.GetCaption()
				[ ] 
				[+] if(sCaption=='Make All New')
					[ ] 
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"UnMatch-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.UnMatch.Pick()
					[ ] 
				[+] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"UnMatch-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
			[+] else
				[ ] ReportStatus("Find matched transaction in Register",FAIL,"Matched transaction in Register is not found")
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu-Revert to Original Payee Transaction in C2R #####################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test14_RevertOriginalPayeeInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that user can revert back to Original Payee and override the payee selected by ACE or naming rules. 
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	Ifuser can revert back to Original Payee and override the payee selected by ACE or naming rules. 						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test14_RevertOriginalPayeeInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Transworld"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="Transworld Air1234"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(7))
			[ ] 
			[ ] bMatch= MatchStr("*{sAccept}*",sActual)
			[ ] 
			[+] if(bMatch==TRUE)
				[ ] ReportStatus("Check the Payee of the matched transaction",PASS,"The Payee of the matched transaction is as '{sAccept}' ")
			[+] else
				[ ] ReportStatus("Check the Payee of the matched transaction",FAIL,"The Payee of the matched transaction is not as '{sAccept}' ")
			[ ] 
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
			[ ] 
			[+] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] 
			[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"RevertPayee-Edit Menu option is present")
			[ ] 
			[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.RevertPayee.Pick()
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(7))
			[ ] 
			[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
			[ ] 
			[+] if(bMatch==TRUE)
				[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New' ")
			[+] else
				[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Edit Menu- Renaming RulesTransaction in C2R ###########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test07_RenamingRulesButtonOnBottomOfC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Renaming Rules' button at the bottom of the C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Renaming Rules' button at the bottom of the C2R window.					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test15_RenamingRulesTransactionInC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Renaming Rules Button present on bottom of the C2R window------------------
			[ ] 
			[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.RenamingRules.Exists())
				[ ] 
				[ ] ReportStatus("Check Renaming Rules Button present",PASS,"Renaming Rules Button is present on the bottom of the C2R window")
				[ ] 
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(3))
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.ShowRenamingRules.Pick()
				[ ] 
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Renaming Rules Dialog gets opened------------------
				[+] if(RenamingRules.Exists())
					[ ] ReportStatus("Verify Renaming Rules Dialog ", PASS , "Renaming Rules Dialog is present ")
					[ ] RenamingRules.Done.Click()
				[+] else
					[ ] ReportStatus("Verify Renaming Rules Dialog", FAIL , "Renaming Rules Dialog is not present")
				[ ] 
				[ ] 
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Renaming Rules Button present",FAIL,"Renaming Rules Button is present on the bottom of the C2R window")
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click Menu-Delete Transaction  in C2R #############################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test20_DeleteTransactionRightClickC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that particular transactions in C2R can be deleted using 
		[ ] //'Delete Transaction' option in Right Click Menu.
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If 'Delete Transaction' option in Right Click Menu works correctly.					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test20_DeleteTransactionRightClickC2R() appstate QuickenBaseState
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 16" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
			[ ] 
			[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.GetCaption()
			[ ] 
			[-] if(sCaption=='Delete')
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Delete-Edit Menu option is present")
				[ ] 
				[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
				[ ] 
			[-] else
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Delete-Edit Menu option is not present")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] 
			[+] if(AlertMessage.Exists())
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[+] if(sMessage =="Delete the download transaction?")
					[ ] 
					[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
					[ ] 
					[ ] AlertMessage.Yes.Click()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
					[ ] 
					[ ] bMatch= MatchStr("*{lsPayeeName[2]}*",sActual)
					[ ] 
					[+] if(bMatch==FALSE)
						[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction got deleted Successfully ")
					[+] else
						[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction not got deleted Successfully ")
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[+] if(AlertMessage.Exists())
						[ ] 
						[ ] sMessage=AlertMessage.MessageText.GetText()
						[ ] 
						[+] if(sMessage =="Delete the download transaction?")
							[ ] 
							[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
							[ ] 
							[ ] AlertMessage.No.Click()
							[ ] 
							[ ] Sleep(2)
							[ ] 
							[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
							[ ] 
							[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
							[ ] 
							[ ] bMatch= MatchStr("*{lsPayeeName[3]}*",sActual)
							[ ] 
							[ ] 
							[ ] 
							[ ] 
						[+] else
							[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
					[ ] 
				[+] else
					[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
			[+] else
				[ ] ReportStatus("Check Delete transaction confirmation window",FAIL,"Delete transaction confirmation window is not present")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
		[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click Menu- Match Manually Transaction in C2R #####################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test21_MatchManuallyTransactionRightClickC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can match transactions in C2R to checking register using 'Match Manually' option.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can match transactions in C2R to checking register using 'Match Manually' option.						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test21_MatchManuallyTransactionRightClickC2R() appstate QuickenBaseState
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 16" 
	[ ] sAccept = "Edit"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="Accepted"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
			[ ] 
			[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
			[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MatchManually.GetCaption()
			[ ] 
			[+] if(sCaption=='Match Manually')
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Match Manually-Edit Menu option is present")
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MatchManually.Pick()
				[ ] 
			[+] else
				[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Match Manually-Edit Menu option is not present")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] //--------------------------Verify the Message for Match Manually-----------------------------------
			[+] if(AlertMessage.Exists())
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[+] if(sMessage =="There are no transactions to match.")
					[ ] 
					[ ] ReportStatus("Match Manually -Edit menu in C2R",PASS,"Edit Menu-Match Manually downloaded transactions from C2R")
					[ ] 
					[ ] AlertMessage.Yes.Click()
					[ ] 
					[ ] Sleep(2)
					[ ] 
					[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
					[ ] 
					[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
					[ ] 
					[ ] bMatch= MatchStr("*{lsPayeeName[2]}*",sActual)
					[ ] 
					[+] if(bMatch==FALSE)
						[ ] ReportStatus("Check the Edit Menu-Match Manually for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction got matched manually ")
					[+] else
						[ ] ReportStatus("Check the Edit Menu-Match Manually for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction not got matched manually ")
					[ ] 
					[ ] 
				[+] else
					[ ] ReportStatus("Match Manually -Edit menu in C2R",FAIL,"Edit Menu-Match Manually downloaded transactions from C2R message is not present")
			[+] else
				[ ] 
				[+] if(ManuallyMatchTransactions.Exists())
					[ ] ReportStatus("Match Manually -Edit menu in C2R",PASS,"Edit Menu-Match Manually downloaded transactions from C2R")
					[ ] 
				[+] else
					[ ] ReportStatus("Match Manually -Edit menu in C2R",FAIL,"Edit Menu-Match Manually downloaded transactions window not available")
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click Menu-UnMatch Transaction in C2R ############################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test22_UnMatchTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify functionality of 'Unmatch' option in Edit menu when Banking 
		[ ] //register contains more than one transactions matching to the single downloaded transactions in C2R.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If functionality of 'Unmatch' option in Edit menu works correctly							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test22_UnMatchTransactionInC2R() appstate QuickenBaseState
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Match"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="New"
	[ ] sPayee="Test1"
	[ ] WindowName = "MDI"
	[ ] 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iResult=FindTransaction(WindowName,sPayee)
			[ ] 
			[-] if(iResult==PASS)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[-] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'Match' ")
				[-] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is not as 'Match' ")
				[ ] 
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.UnMatch.GetCaption()
				[ ] 
				[-] if(sCaption=='Make All New')
					[ ] 
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"UnMatch-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.UnMatch.Pick()
					[ ] 
				[-] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"UnMatch-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[-] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New' ")
				[-] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
			[+] else
				[ ] ReportStatus("Find matched transaction in Register",FAIL,"Matched transaction in Register is not found")
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click Menu- Make New Transaction in C2R ##########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test23_MakeNewTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can change the status of matched transactions to New' using 'Make New' option.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can change the status of matched transactions to New' using 'Make New' option							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test23_MakeNewTransactionInC2R() appstate QuickenBaseState
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Match"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="New"
	[ ] sPayee="Test2"
	[ ] WindowName = "MDI"
	[ ] 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iResult=FindTransaction(WindowName,sPayee)
			[ ] 
			[+] if(iResult==PASS)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'Match' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is not as 'Match' ")
				[ ] 
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeNew.GetCaption()
				[ ] 
				[+] if(sCaption=='Make New')
					[ ] 
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Make New-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeNew.Pick()
					[ ] 
				[+] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Make New-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New'  ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
				[ ] 
				[ ] iResult=FindTransaction("MDI",lsPayeeName[1])
				[ ] 
				[+] if(iResult==PASS)
					[ ] ReportStatus("Check transaction is added as a new transaction",PASS,"Transaction is added as a new transaction ")
				[+] else
					[ ] ReportStatus("Check transaction is added as a new transaction",FAIL,"Transaction is added as a new transaction ")
				[ ] 
			[+] else
				[ ] ReportStatus("Find matched transaction in Register",FAIL,"Matched transaction in Register is not found")
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click Menu- Make All New Transaction in C2R ########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test24_MakeAllNewTransactionInC2R() 
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify that user can change the status of all matched transactions to 'New' using 'Make all New' options.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If user can change the status of all matched transactions to 'New' using 'Make all New' options.						
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test24_MakeAllNewTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Match"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="New"
	[ ] sPayee="Test3"
	[ ] WindowName = "MDI"
	[ ] 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] iResult=FindTransaction(WindowName,sPayee)
			[ ] 
			[+] if(iResult==PASS)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(5))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccept}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'Match' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is not as 'Match' ")
				[ ] 
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeAllNew.GetCaption()
				[ ] 
				[+] if(sCaption=='Make All New')
					[ ] 
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Make All New-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.MakeAllNew.Pick()
					[ ] 
				[+] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Make All New-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(5))
				[ ] 
				[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New' ")
				[+] else
					[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
			[+] else
				[ ] ReportStatus("Find matched transaction in Register",FAIL,"Matched transaction in Register is not found")
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click-Revert to Original Payee Transaction in C2R ####################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test25_RevertOriginalPayeeInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that user can revert back to Original Payee and override the payee selected by ACE or naming rules. 
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If  user can revert back to Original Payee and override the payee selected by ACE or naming rules. 				
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test25_RevertOriginalPayeeInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] sAccept = "Transworld"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sAccepted="Transworld Air1234"
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Transworld","Max"}
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(7))
			[ ] 
			[ ] bMatch= MatchStr("*{sAccept}*",sActual)
			[ ] 
			[+] if(bMatch==TRUE)
				[ ] ReportStatus("Check the Payee of the matched transaction",PASS,"The Payee of the matched transaction is as '{sAccept}' ")
			[+] else
				[ ] ReportStatus("Check the Payee of the matched transaction",FAIL,"The Payee of the matched transaction is not as '{sAccept}' ")
			[ ] 
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
			[ ] 
			[+] //------------------Verify the contents of options of Edit Button for each transaction------------------
				[ ] 
			[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"RevertPayee-Edit Menu option is present")
			[ ] 
			[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,1138,42)
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.RevertPayee.Pick()
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] //------------------Verify the Edit Button for each transaction------------------
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(7))
			[ ] 
			[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
			[ ] 
			[+] if(bMatch==TRUE)
				[ ] ReportStatus("Check the Status of the matched transaction",PASS,"The Status of the matched transaction is as 'New' ")
			[+] else
				[ ] ReportStatus("Check the Status of the matched transaction",FAIL,"The Status of the matched transaction is as 'New' ")
				[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Right Click Menu- Renaming RulesTransaction in C2R ######################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test26_RenamingRulesTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify availability and functionality of 'Renaming Rules' button at the bottom of the C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Renaming Rules' button at the bottom of the C2R window.					
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test26_RenamingRulesTransactionInC2R() appstate none
	[ ] 
	[ ] // ------------------Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 14" 
	[ ] sAccept = "Accept"
	[ ] iXcord = 1059
	[ ] iYcord = 24
	[ ] sAccepted="Accepted"
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] lsPayeeName={"Matt","David","Tom","Sam","Max"}
	[ ] 
	[ ] 
	[+] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] //------------------Verify Renaming Rules Button present on bottom of the C2R window------------------
			[ ] 
			[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.RenamingRules.Exists())
				[ ] 
				[ ] ReportStatus("Check Renaming Rules Button present",PASS,"Renaming Rules Button is present on the bottom of the C2R window")
				[ ] 
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(3))
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.ShowRenamingRules.Pick()
				[ ] 
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Renaming Rules Dialog gets opened------------------
				[+] if(RenamingRules.Exists())
					[ ] ReportStatus("Verify Renaming Rules Dialog ", PASS , "Renaming Rules Dialog is present ")
					[ ] RenamingRules.Done.Click()
				[+] else
					[ ] ReportStatus("Verify Renaming Rules Dialog", FAIL , "Renaming Rules Dialog is not present")
				[ ] 
				[ ] 
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Check Renaming Rules Button present",FAIL,"Renaming Rules Button is present on the bottom of the C2R window")
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Update Transactions button in C2R ###################################################
	[ ] // ********************************************************
	[-] // TestCase Name:	Test30_UpdateTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Update Transactions' button in C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Update Transactions' button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test30_UpdateTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.UpdateTransactions.Click()
			[ ] WaitforState(OnlineUpdateAccount,TRUE,3)
			[ ] 
			[-] if(OnlineUpdateAccount.Exists())
				[ ] ReportStatus("Verify Online Update for account Dialog ", PASS , "Online Update for Account Dialog is present ")
				[ ] OnlineUpdateAccount.SetActive()
				[ ] OnlineUpdateAccount.Close()
				[ ] 
			[-] else
				[ ] ReportStatus("Verify Online Update for account Dialog ", FAIL , "Online Update for Account Dialog is not present ")
			[ ] 
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Banking Account -  Online payment button in C2R #########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test31A_OnlinePaymentButtonInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Set up online Payment ' button in C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of  'Set up online Payment 'button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test31A_OnlinePaymentButtonInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage
	[ ] sAccount = "Checking 17" 
	[ ] sTextMessage="Finish accepting transactions first and then try again"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.SetUpMakeOnlinePayment.Click()
			[ ] WaitforState(AlertMessage,TRUE,3)
			[ ] 
			[-] if(AlertMessage.Exists())
				[ ] ReportStatus("Verify Alert Message for Setup Online Payment", FAIL , " Alert Message for Setup Online Payment is present ")
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[ ] bMatch=MatchStr("*{sTextMessage}*",sMessage)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] 
					[ ] ReportStatus("Online payment button in C2R",PASS,"Online payment button from C2R")
					[ ] 
					[ ] AlertMessage.OK.Click()
				[-] else
					[ ] ReportStatus("Online payment button in C2R",FAIL,"Online payment button from C2R")
			[ ] 
			[ ] 
			[-] else
				[ ] ReportStatus("Verify Alert Message for Setup Online Payment", FAIL , " Alert Message for Setup Online Payment is not present ")
			[ ] 
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Banking Account -  Online payment button in C2R #########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test31B_OnlinePaymentButtonInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Set up online Payment ' button in C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of  'Set up online Payment 'button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test31B_OnlinePaymentButtonInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sText
	[ ] STRING sFileName = "DC_EWC_WEBCONNECT_CLOUD"
	[ ] STRING sDataFile = AUT_DATAFILE_PATH + "\" + sFileName + ".QDF"
	[ ] STRING sSourceFile = AUT_DATAFILE_PATH + "\C2R Data File\" + sFileName + ".QDF"
	[ ] 
	[ ] sAccount = "BUSINESS CHECKING XX0124" 
	[ ] sText="Quicken Bill Pay"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------ Create Data File------------------
		[ ] iOpenDataFile = OpenDataFile(sFileName)
		[ ] 
		[ ] // ------------------Report Staus If Data file opened successfully------------------
		[-] if ( iOpenDataFile  == PASS)
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is opened")
			[ ] QuickenWindow.SetActive()
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.OneStepUpdate.Select()
			[ ] 
			[-] if(OneStepUpdate.Exists(SHORT_SLEEP))
				[ ] ReportStatus("Verify IAMS is Registration ", PASS, "IAMS Registration is Done")
			[-] else
				[ ] RegisterQuickenConnectedServices()
			[ ] 
		[-] else 
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is not opened")
		[ ] 
		[ ] 
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.SetUpMakeOnlinePayment.Click()
			[ ] 
			[ ] Sleep(1)
			[ ] 
			[-] if(ActivateOnlineBillPay.Exists(SHORT_SLEEP))
				[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",PASS,"Activate Online Bill Pay window is displayed successfully")
				[ ] ActivateOnlineBillPay.SetActive()
				[ ] ActivateOnlineBillPay.ActivateNow.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[-] if(AddAnyAccount.Exists(SHORT_SLEEP))
					[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",PASS,"Add account window is displayed successfully")
					[ ] 
					[ ] 
					[ ] sCaption=AddAnyAccount.QuickenBillPay.GetCaption()
					[ ] 
					[+] if(sText==sCaption)
						[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",PASS,"Add account window for 'Quicken Bill Pay' is displayed successfully")
						[ ] 
						[ ] 
					[+] else
						[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",FAIL,"Add account window for 'Quicken Bill Pay' is not displayed successfully")
					[ ] 
					[ ] AddAnyAccount.Close()
					[ ] 
					[-] if(AlertMessage.Exists())
						[ ] AlertMessage.SetActive()
						[ ] AlertMessage.OK.Click()
						[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",FAIL,"Add account window is not displayed successfully")
				[ ] 
			[-] else
				[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",FAIL,"Activate Online Bill Pay window is not displayed successfully")
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //####### Banking Account -  Make an online payment button in C2R ########################################
	[ ] // ********************************************************
	[-] // TestCase Name:	Test32_MakeOnlinePaymentButtonInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Make an online payment' button in C2R window..
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of  'Make an online payment' button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test32_MakeOnlinePaymentButtonInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sText
	[ ] sAccount = "BUSINESS ECONOMY CHECKING XX6154" 
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.SetUpMakeOnlinePayment.Click()
			[ ] 
			[ ] WaitforState(OnlineCenter,TRUE,3)
			[ ] 
			[-] if(OnlineCenter.Exists())
				[ ] ReportStatus("Verify Online Center window opened after clicking Make a Online Payment", PASS , " Online Center window opened after clicking Make a Online Payment")
				[ ] 
				[ ] sText=OnlineCenter.Account.GetText()
				[ ] 
				[-] if(sText==sAccount)
					[ ] 
					[ ] ReportStatus("Verify the Account name for which make a Online Payment is clicked",PASS,"Account Name on Online Center is similar to account for which Make a Online Payment is clicked")
					[ ] 
					[ ] OnlineCenter.Close()
					[ ] 
				[-] else
					[ ] ReportStatus("Verify the Account name for which make a Online Payment is clicked",FAIL,"Account Name{sText} on Online Center is not similar to account {sAccount} for which Make a Online Payment is clicked")
			[-] else
				[ ] ReportStatus("Verify Online Center window opened after clicking Make a Online Payment", FAIL , " Online Center window is not opened after clicking Make a Online Payment")
			[ ] 
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //######## Banking Account -   Pop up for transaction over a year old in C2R ##################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test33_OneYearTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage
	[ ] STRING sFileName = "Compare2Register"
	[ ] STRING sDataFile = AUT_DATAFILE_PATH + "\" + sFileName + ".QDF"
	[ ] STRING sSourceFile = AUT_DATAFILE_PATH + "\C2R Data File\" + sFileName + ".QDF"
	[ ] 
	[ ] sAccount = "Checking at Wells Fargo Bank" 
	[ ] sTextMessage="You are entering a transaction over a year"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------ Create Data File------------------
		[ ] iOpenDataFile = OpenDataFile(sFileName)
		[ ] 
		[ ] // ------------------Report Staus If Data file opened successfully------------------
		[-] if ( iOpenDataFile  == PASS)
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is opened")
			[ ] QuickenWindow.SetActive()
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.OneStepUpdate.Select()
			[ ] 
			[-] if(OneStepUpdate.Exists(SHORT_SLEEP))
				[ ] ReportStatus("Verify IAMS is Registration ", PASS, "IAMS Registration is Done")
			[-] else
				[ ] RegisterQuickenConnectedServices()
			[ ] 
		[-] else 
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is not opened")
		[ ] 
		[ ] 
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
			[ ] 
			[ ] sleep(1)
			[ ] 
			[-] if(AlertMessage.Exists(SHORT_SLEEP))
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[ ] bMatch=MatchStr("*{sTextMessage}*",sMessage)
				[ ] 
				[-] if(bMatch==TRUE)
					[ ] ReportStatus("Verify Quicken prompts message 'user tries to enter transaction over a year old'",PASS,"Quicken prompted message 'user tries to enter transaction over a year old' successfully ")
				[-] else
					[ ] ReportStatus("Verify Quicken prompts message 'user tries to enter transaction over a year old'",FAIL,"Quicken not prompted message 'user tries to enter transaction over a year old' successfully ")
				[ ] 
				[ ] AlertMessage.SetActive()
				[ ] AlertMessage.No.Click()
				[ ] 
			[-] else
				[ ] ReportStatus("Verify Alert Message",FAIL,"Alert Message is not prompted")
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //######## Banking Account - Download transactions with the account open for Direct Connect FI.################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test34_DownloadTransactionManualtoDC() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage,sTransactionDownload,sUserName,sPassword,sAccountNumber,sFIName
	[ ] 
	[ ] sAccount = "Checking 01 Account" 
	[ ] sTextMessage="You are entering a transaction over a year"
	[ ] sFIName = "Mission Federal Credit Union"
	[ ] sTransactionDownload = "Activate Downloads"
	[ ] sUserName="91058197"
	[ ] sPassword="Raiders2030"
	[ ] sAccountNumber="91058197-09"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.AccountList.Select()
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=NavigateToAccountDetails(sAccount)
			[ ] 
			[ ] 
			[+] if(iSelect==PASS)
				[ ] ReportStatus("Verify that Account Details is opened ",PASS,"Account Details Window is opened successfully")
				[ ] 
				[ ] AccountDetails.FinancialInstitution.SetText(sFIName)
				[ ] 
				[ ] AccountDetails.AccountNumber.SetText(sAccountNumber)
				[ ] 
				[ ] AccountDetails.OK.Click()
				[ ] 
				[+] if(AccountList.Exists())
					[ ] ReportStatus("Verify that Account List is present ",PASS,"Account List Window is present")
					[ ] 
					[ ] AccountList.SetActive()
					[ ] AccountList.Maximize()
					[ ] 
					[ ] sHandle = Str(AccountList.QWinChild.Order.ListBox.GetHandle())
					[ ] 
					[-] for(i=0;i<AccountList.QWinChild.Order.ListBox.GetItemCount();i++)
						[ ] 
						[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,Str(i))
						[ ] 
						[ ] bMatch=MatchStr("{sAccount}",sActual)
						[ ] 
						[+] if(bMatch==TRUE)
							[ ] ReportStatus("Verify Account is present in Account List",PASS,"Account{sAccount} is present in Account List")
							[ ] break
						[ ] 
						[ ] 
					[ ] bMatch=MatchStr("{sTransactionDownload}",sActual)
					[ ] 
					[+] if(bMatch==TRUE)
						[ ] ReportStatus("Verify Transaction Download changes",PASS,"Transaction Download status change to {sTransactionDownload} in Account List")
						[ ] 
						[ ] AccountList.QWinChild.Order.ListBox.Click(1,1155, 293)
						[ ] 
						[ ] iResult=ActivateDownload(sUserName,sPassword)
						[ ] 
						[+] if(iResult==PASS)
							[ ] 
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
							[ ] 
							[ ] AccountList.SetActive()
							[ ] AccountList.Close()
							[ ] 
							[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
							[ ] 
							[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
							[ ] 
							[ ] bMatch=MatchStr("*{sMessage}*",sActual)
							[ ] 
							[+] if(bMatch==FALSE)
								[ ] 
								[ ] ReportStatus("Verify Transactions in C2R",PASS,"Transactions are downloaded in C2R")
							[+] else
								[ ] ReportStatus("Verify Transactions in C2R",FAIL,"Transactions are not downloaded in C2R")
							[ ] 
						[-] else
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
						[ ] 
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Transaction Download changes",FAIL,"Transaction Download status not change to {sTransactionDownload} in Account List")
						[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Verify that Account List is present ",FAIL,"Account List Window is not present")
			[-] else
				[ ] ReportStatus("Verify that Account Details is opened ",FAIL,"Account Details Window is opened successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //#####Banking Account - Download transactions with the account open for  Express Web Connect  FI.##############
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test35_DownloadTransactionManualtoEWC() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage,sTransactionDownload,sUserName,sPassword,sAccountNumber,sFIName
	[ ] 
	[ ] sAccount = "Checking 02 Account" 
	[ ] sTextMessage="You are entering a transaction over a year"
	[ ] sFIName = "CCMintBank"
	[ ] sTransactionDownload = "Activate Downloads"
	[ ] sUserName="testuser13"
	[ ] sPassword="testuser13"
	[ ] sAccountNumber="18"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.AccountList.Select()
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=NavigateToAccountDetails(sAccount)
			[ ] 
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Verify that Account Details is opened ",PASS,"Account Details Window is opened successfully")
				[ ] 
				[ ] AccountDetails.FinancialInstitution.SetText(sFIName)
				[ ] 
				[ ] AccountDetails.AccountNumber.SetText(sAccountNumber)
				[ ] 
				[ ] AccountDetails.OK.Click()
				[ ] 
				[-] if(AccountList.Exists())
					[ ] ReportStatus("Verify that Account List is present ",PASS,"Account List Window is present")
					[ ] 
					[ ] AccountList.SetActive()
					[ ] AccountList.Maximize()
					[ ] 
					[ ] sHandle = Str(AccountList.QWinChild.Order.ListBox.GetHandle())
					[ ] 
					[-] for(i=0;i<AccountList.QWinChild.Order.ListBox.GetItemCount();i++)
						[ ] 
						[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,Str(i))
						[ ] 
						[ ] bMatch=MatchStr("{sAccount}",sActual)
						[ ] 
						[-] if(bMatch==TRUE)
							[ ] ReportStatus("Verify Account is present in Account List",PASS,"Account{sAccount} is present in Account List")
							[ ] break
						[ ] 
						[ ] 
					[ ] bMatch=MatchStr("{sTransactionDownload}",sActual)
					[ ] 
					[-] if(bMatch==TRUE)
						[ ] ReportStatus("Verify Transaction Download changes",PASS,"Transaction Download status change to {sTransactionDownload} in Account List")
						[ ] 
						[ ] AccountList.QWinChild.Order.ListBox.Click(1,1155, 293)
						[ ] 
						[ ] iResult=ActivateDownload(sUserName,sPassword)
						[ ] 
						[+] if(iResult==PASS)
							[ ] 
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
							[ ] 
							[ ] AccountList.SetActive()
							[ ] AccountList.Close()
							[ ] 
							[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
							[ ] 
							[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
							[ ] 
							[ ] bMatch=MatchStr("*{sMessage}*",sActual)
							[ ] 
							[+] if(bMatch==FALSE)
								[ ] 
								[ ] ReportStatus("Verify Transactions in C2R",PASS,"Transactions are downloaded in C2R")
							[+] else
								[ ] ReportStatus("Verify Transactions in C2R",FAIL,"Transactions are not downloaded in C2R")
							[ ] 
						[-] else
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
						[ ] 
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Transaction Download changes",FAIL,"Transaction Download status not change to {sTransactionDownload} in Account List")
						[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Verify that Account List is present ",FAIL,"Account List Window is not present")
			[-] else
				[ ] ReportStatus("Verify that Account Details is opened ",FAIL,"Account Details Window is opened successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //#####Importing web connect files twice, Activate One Step Update pop up is displayed.########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test38_ImportWebConnectTwice() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"BOA 1","BOA 2"}
	[ ] sAccount="Checking at Bank of America*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[-] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] ActivateOneStepUpdate.Close()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //#####Importing web connect files twice, on Activate One Step Update select No.###########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test39_ImportWebConnectTwiceSelectNo() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"MFCU 1","MFCU 2"}
	[ ] sAccount="Checking at Mission*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[-] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] 
						[ ] ActivateOneStepUpdate.No.Select("No,")
						[ ] 
						[ ] ActivateOneStepUpdate.Close()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //##### Importing web connect files twice, on Activate One Step Update select Yes.###########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test40_ImportWebConnectTwiceSelectYes() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"MFCU 1","MFCU 2"}
	[ ] sAccount="Checking at Mission*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.Edit.Click()
		[ ] QuickenWindow.Edit.Preferences.Select()
		[ ] 
		[+] if(Preferences.Exists(5))
			[ ] Preferences.SelectPreferenceType1.ListBox.Select(8)
			[ ] Preferences.ResetQuickenWarnings.Click()
			[ ] Preferences.OK.Click()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[-] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] 
						[ ] ActivateOneStepUpdate.Yes.Select("Yes,")
						[ ] 
						[ ] ActivateOneStepUpdate.Activate.Click()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //#####Accept transactions one by one using 'Enter' key for Online Account##################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[-] testcase Test41_AcceptTrxnsEnterKeyOnline() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sPayeeName
	[ ] sAccount ="Checking Account 19"
	[ ] sAccepted="Accepted"
	[ ] sPayeeName="Matt"
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] 
		[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect==PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.TypeKeys(KEY_ENTER)
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
			[ ] 
			[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
			[ ] 
			[-] if(bMatch==TRUE)
				[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the transaction '{lsPayeeName[i]}' is 'Accepted' after clicking on Accept Button in C2R")
				[ ] 
				[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
				[ ] iResult=FindTransaction(WindowName,sPayeeName)
				[-] if(iResult==PASS)
					[ ] 
					[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
				[-] else
					[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
				[ ] 
			[+] else
				[ ] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the transaction '{lsPayeeName[i]}'  is not 'Accepted' after clicking on Accept Button in C2R")
				[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
				[ ] iResult=FindTransaction("MDI",lsPayeeName[i])
				[ ] 
				[+] if(iResult==PASS)
					[ ] 
					[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R ,Still status is not changed to Accepted")
				[+] else
					[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R,as status is not changed to Accepted")
				[ ] 
				[ ] 
			[ ] 
			[ ] 
			[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
			[ ] 
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //#####Accept transactions one by one using 'Enter' for Online Account for WC Account .###########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test42_AcceptTrxnsEnterKeyWC() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"MFCU 1","MFCU 2"}
	[ ] sAccount="Checking at Mission*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.Edit.Click()
		[ ] QuickenWindow.Edit.Preferences.Select()
		[ ] 
		[+] if(Preferences.Exists(5))
			[ ] Preferences.SelectPreferenceType1.ListBox.Select(8)
			[ ] Preferences.ResetQuickenWarnings.Click()
			[ ] Preferences.OK.Click()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[+] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] 
						[ ] ActivateOneStepUpdate.Yes.Select("Yes,")
						[ ] 
						[ ] ActivateOneStepUpdate.Activate.Click()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //############# Verify Investing Account Accept Button On Transaction #############################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test43_VerifyInvestingAccountAcceptButtonOnTransaction() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName,sCaption, sExpected,sFileName2,sAccepted,lsPayeeName
		[ ] STRING sDate 
		[ ] sDate = DateStr () 
		[ ] iXcord = 793
		[ ] iYcord = 31
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAccepted="Accepted"
		[ ] lsPayeeName = "Vanguard Federal Money Market Fund"
		[ ] iCount=0
		[ ] iCount1=0
		[ ] 
	[+] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[+] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[+] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[+] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[+] if (iResult  == PASS)
								[ ] 
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
								[ ] 
								[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,iXcord,iYcord)
								[ ] 
								[ ] sleep(2)
								[ ] 
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
								[ ] 
								[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
								[ ] 
								[+] if(bMatch==TRUE)
									[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the investing transaction is 'Accepted' after clicking on Accept Button in C2R")
									[ ] 
									[ ] iResult=FindTransaction("MDI",lsPayeeName,ACCOUNT_INVESTING)
									[ ] 
									[+] if(iResult==PASS)
										[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName}' got added in Register after clicking on Accept Button in C2R")
									[+] else
										[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName}' not got added in Register after clicking on Accept Button in C2R")
									[ ] 
									[ ] 
								[+] else
									[+] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the investing transaction  is not 'Accepted' after clicking on Accept Button in C2R")
										[ ] 
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Investing Account AcceptButton At C2R Bottom Window########################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test44_VerifyInvestingAccountAcceptButtonAtC2RBottom() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,lsPayeeName
		[ ] STRING sDate 
		[ ] sDate = DateStr () 
		[ ] iXcord = 793
		[ ] iYcord = 31
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAccepted="Accepted"
		[ ] lsPayeeName = "Vanguard Federal Money Market Fund"
		[ ] 
	[+] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[+] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[+] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[+] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[+] if (iResult  == PASS)
								[ ] 
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
								[ ] 
								[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
								[ ] 
								[ ] sleep(2)
								[ ] 
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
								[ ] 
								[ ] Print(sActual)
								[ ] 
								[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
								[ ] 
								[+] if(bMatch==TRUE)
									[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the investing transaction is 'Accepted' after clicking on Accept Button in C2R")
									[ ] iResult=FindTransaction("MDI",lsPayeeName,ACCOUNT_INVESTING)
									[ ] 
									[+] if(iResult==PASS)
										[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName}' got added in Register after clicking on Accept Button in C2R")
									[+] else
										[+] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName}' not got added in Register after clicking on Accept Button in C2R")
														[ ] 
								[+] else
									[+] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the investing transaction  is not 'Accepted' after clicking on Accept Button in C2R")
										[ ] 
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Help Button in Investing Account C2R Window################################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test45_VerifyHelpButtonInvestingAccountC2RWindow() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] 
	[+] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[+] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] sleep(1)
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[+] if (iResult  == PASS)
					[ ] 
					[ ] //------------------Verify Accept Button present on bottom of the C2R window------------------
					[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HelpIcon.Exists())
						[ ] ReportStatus("Check Help Button present",PASS,"Help Button is present on the bottom of the C2R window")
						[ ] 
						[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.HelpIcon.Click()
						[ ] Sleep(2)
						[ ] //------------------Help Dialog gets opened------------------
						[+] if(QuickenHelp.Exists())
							[ ] ReportStatus("Verify Help Dialog ", PASS , "Help Dialog is present ")
							[ ] QuickenHelp.Close()
						[+] else
							[ ] ReportStatus("Verify Help Dialog", FAIL , "Help Dialog is not present")
						[ ] 
						[ ] 
					[+] else
						[ ] ReportStatus("Check Help Button present",FAIL,"Help Button is not present on the bottom of the C2R window")
					[ ] 
					[ ] 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Accept All Button At C2R Bottom Window of Investing Account###################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test46_VerifyAcceptAllButtonC2RInvestingAccount() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted
		[ ] STRING sDate 
		[ ] sDate = DateStr () 
		[ ] iXcord = 793
		[ ] iYcord = 31
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAccepted="Accepted"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] sMessage="@" 
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[-] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[-] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[-] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[-] if (iResult  == PASS)
								[ ] 
								[ ] 
								[ ] //------------------Verify Accept All Button present on bottom of the C2R window------------------
								[ ] 
								[-] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Exists())
									[ ] 
									[ ] ReportStatus("Check Accept All Button present",PASS,"Accept All Button is present on the bottom of the C2R window")
									[ ] 
									[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
									[ ] 
									[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
									[ ] 
									[ ] Sleep(2)
									[ ] 
									[-] if(QuickenWindow.Exists())
										[ ] QuickenWindow.SetActive()
										[ ] SecuritiesComparisonMismatch.AcceptButton.Click()
									[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
									[ ] 
									[+] for(i=1;i<=ListCount(lsPayeeName);i++)
										[ ] 
										[ ] iResult=FindTransaction("MDI",lsPayeeName[i],ACCOUNT_INVESTING)
										[ ] 
										[+] if(iResult==PASS)
											[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
										[+] else
											[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
										[ ] 
									[ ] 
									[ ] QuickenWindow.SetActive()
									[ ] 
									[ ] MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.Click()
									[ ] sleep(2)
									[ ] //------------------Verify the "There are no downloaded transactions to accept." message is displayed.------------------
									[ ] 
									[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
									[ ] 
									[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(1))
									[ ] bMatch= MatchStr("*{sMessage}*",sActual)
									[ ] 
									[+] if(bMatch==TRUE)
										[ ] ReportStatus("Check Message in C2R window",PASS,"'There are no downloaded transactions to accept.' message is displayed.")
									[+] else
										[ ] ReportStatus("Check Message in C2R window",FAIL,"'There are no downloaded transactions to accept.' message is not displayed.")
										[ ] 
									[ ] //------------------Verify the Accept, Hide Accepted buttons are disabled.------------------
									[ ] 
									[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.IsEnabled())
										[ ] 
										[ ] ReportStatus("Check Accept Button disabled",PASS,"Accept Button is disabled on the bottom of the C2R window")
										[ ] 
									[+] else
										[ ] ReportStatus("Check Accept Button disabled",FAIL,"Accept Button is enabled on the bottom of the C2R window")
										[ ] 
									[ ] 
								[+] else
									[ ] ReportStatus("Check Accept Button present",FAIL,"Accept Button is present on the bottom of the C2R window")
								[ ] 
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Accept All Right Click Menu at C2R Window of Investing Account##################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test47_VerifyAcceptAllRightClickMenuC2R_InvestingAccount() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,sAcceptAllTransaction
		[ ] STRING sDate 
		[ ] sDate = DateStr () 
		[ ] iXcord = 241
		[ ] iYcord = 12
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transactions"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] sMessage="@" 
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[-] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[-] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[-] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[-] if (iResult  == PASS)
								[ ] 
								[ ] //------------------Right Click on Accept Button to accept------------------
								[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,iXcord,iYcord)
								[ ] sCaption = C2RRightClick.AcceptAllTransaction.GetCaption()
								[ ] bMatch= MatchStr("*{sAcceptAllTransaction}*",sCaption)
								[-] if(bMatch==TRUE)
										[ ] ReportStatus("Check Caption of Right click Menu in C2R  of the transaction is 'Accept All Transactions'",PASS,"Caption  '{sCaption}'  after right click in C2R is available for the transaction")
										[ ] 
										[ ] //------------Accept All Transaction From C2R into Register-----------------------
										[ ] C2RRightClick.AcceptAllTransaction.Pick()
										[ ] sleep(3)
										[ ] 
										[-] if(QuickenWindow.Exists())
											[ ] QuickenWindow.SetActive()
											[ ] SecuritiesComparisonMismatch.AcceptButton.Click()
										[ ] 
										[ ] QuickenWindow.SetActive()
										[ ] 
										[ ] MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.Click()
										[ ] sleep(2)
										[ ] 
										[ ]  //------------------Verify there are no transactions left to be Accepted in C2R-------------------------
										[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
										[ ] sleep(3)
										[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
										[ ] bMatch= MatchStr("*{sMessage}*",sActual)
										[+] if(bMatch==TRUE)
											[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"There are no transactions left in the C2R to be Accepted")
										[+] else
											[ ] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"There are some  transactions left in the C2R that needs to be Accepted")
										[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
										[+] for(i=1;i<=ListCount(lsPayeeName);i++)			
												[ ] iResult=FindTransaction("MDI",lsPayeeName[i],ACCOUNT_INVESTING)
												[+] if(iResult==PASS)
													[ ] 
													[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
													[ ] 
												[+] else
													[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
								[+] else
									[ ] ReportStatus("Check Caption of Right click Menu in C2R  of the transaction is 'Accept Transaction'",FAIL,"Caption  '{sCaption}'  after right click in C2R is not availble")
								[ ] 
								[ ] 
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Finish Later Button at  C2R Window of Investing Account########################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test48_VerifyFinishLaterButtonC2R_InvestingAccount() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,sAcceptAllTransaction,sActual
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transactions"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] sMessage="@" 
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[-] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[-] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[-] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[-] if (iResult  == PASS)
													[ ] 
								[ ] //------------------Verify Finish Later Button present on bottom of the C2R window------------------
								[ ] 
								[-] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.FinishLater.Exists())
									[ ] 
									[ ] ReportStatus("Check Finish Later Button present",PASS,"Finish Later Button is present on the bottom of the C2R window")
									[ ] 
									[ ] //------------------Click on Finish Later Button for accepting all the transactions------------------
									[ ] 
									[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.FinishLater.Click()
									[ ] 
									[ ] Sleep(2)
									[ ] 
									[ ] 
									[ ] //------------------Verify the Accept, Hide Accepted buttons are disabled.------------------
									[ ] 
									[+] if(!MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Exists())
										[ ] 
										[ ] ReportStatus("Check Accept Button exists",PASS,"C2R window got minimized as Accept Button not exists")
										[ ] 
									[+] else
										[ ] ReportStatus("Check Accept Button exists",FAIL,"C2R window not got minimized as Accept Button not exists")
										[ ] 
									[ ] 
									[ ] //------------------Verify all transactions are in C2R window.------------------
									[ ] QuickenWindow.SetActive()
									[ ] 
									[ ] MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.Click()
									[ ] sleep(2)
									[ ] 
									[ ] iCounter=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetItemCount()*2
									[ ] Print(iCounter)
									[+] for(iRow=0,i=1;iRow<iCounter;iRow=iRow+2,i++)
										[ ] 
										[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
										[ ] 
										[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(iRow))
										[ ] Print(sActual)
										[ ] Print(i)
										[ ] 
										[ ] bMatch= MatchStr("*{lsPayeeName[i]}*",sActual)
										[ ] 
										[+] if(bMatch==TRUE)
											[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[i]}' transaction is available in C2R")
										[+] else
											[ ] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[i]}' transaction is not available in C2R")
									[ ] 
								[+] else
									[ ] ReportStatus("Check Finish Later Button present",FAIL,"Finish Later Button is present on the bottom of the C2R window")
								[ ] 
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Renaming Rules Button at  C2R Window of Investing Account####################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test49_VerifyRenamingRulesButtonC2R_InvestingAccount() appstate QuickenBaseState
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1,iXcord,iYcord,iCounter
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,sAcceptAllTransaction,sActual
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transactions"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] sMessage="@" 
		[ ] 
	[+] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[+] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[+] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[+] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[+] if (iResult  == PASS)
									[ ] 
									[ ] //------------------Verify Renaming Rules Button present on bottom of the C2R window------------------
									[ ] 
									[+] if(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.RenamingRules.Exists())
										[ ] 
										[ ] ReportStatus("Check Renaming Rules Button present",PASS,"Renaming Rules Button is present on the bottom of the C2R window")
										[ ] 
										[ ] //------------------Click onRenaming Rules Button for accepting all the transactions------------------
										[ ] 
										[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.RenamingRules.Click()
										[ ] 
										[ ] Sleep(2)
										[ ] 
										[ ] //------------------Renaming Rules Dialog gets opened------------------
										[+] if(RenamingRules.Exists())
											[ ] ReportStatus("Verify Renaming Rules Dialog ", PASS , "Renaming Rules Dialog is present ")
											[ ] RenamingRules.Done.Click()
										[+] else
											[ ] ReportStatus("Verify Renaming Rules Dialog", FAIL , "Renaming Rules Dialog is not present")
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
[ ] //#######################################################################################
[ ] 
[ ] 
[+] //############# Verify Finish Later Button at  C2R Window of Investing Account########################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test50_VerifyEditMenuDeleteTransactionC2R_InvestingAccount() appstate none//QuickenBaseState
	[ ] 
	[-] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,iCounter
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,sAcceptAllTransaction,sActual
		[ ] 
	[-] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transactions"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[-] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[-] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[-] 
							[ ] 
							[-] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[-] if (iResult  == PASS)
								[ ] 
								[ ] //------------------Verify the Edit Button for each transaction------------------
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
								[ ] 
								[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(1,986,23)
								[ ] 
								[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
								[ ] 
								[ ] Sleep(2)
								[ ] 
								[ ] iCounter=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetItemCount()
								[ ] 
								[-] for(iRow=0;iRow<iCounter;iRow=iRow+2)
									[ ] 
									[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
									[ ] 
									[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(iRow))
									[ ] 
									[ ] bMatch= MatchStr("*13.18 shares @  $1*",sActual)
								[ ] 
								[-] if(bMatch==FALSE)
									[ ] ReportStatus("Check the transaction",PASS,"'{lsPayeeName[1]} with amount as 13.18 shares @$1' transaction is deleted in C2R")
								[-] else
									[+] ReportStatus("Check the transaction",FAIL,"'{lsPayeeName[1]}' transaction is  available in C2R")
										[ ] 
								[ ] 
							[-] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
[ ] //#######################################################################################
[ ] 
[+] //############# Right Click Menu-Accept Transaction  in C2R of Investing Account######################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test52_VerifyRightClickMenuAcceptTransactionC2R_InvestingAccount() appstate none//QuickenBaseState
	[ ] 
	[-] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,iCounter
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,sAcceptTransaction,sActual,lsPayeeName
		[ ] 
	[-] // Expected Values
		[ ] sFileName = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAcceptTransaction = "Accept Transaction"
		[ ] sAccepted = "Accepted"
		[ ] lsPayeeName = "Vanguard Federal Money Market Fund"
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[+] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
				[+] if (iResult  == PASS)
					[ ] QuickenWindow.File.Click()
					[ ] QuickenWindow.File.FileImport.Click()
					[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
					[ ] 
					[ ] // Import second web connect file to get transactions in C2R
					[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
						[ ] ImportExportQuickenFile.SetActive()
						[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName2
						[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
						[ ] ImportExportQuickenFile.Open.Click()
						[+] 
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(20))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
							[+] if(FreeUpdateToQuicken.Exists(2))
								[ ] FreeUpdateToQuicken.SetActive()
								[ ] FreeUpdateToQuicken.UpdateLater.Click()
							[ ] 
							[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
							[+] if (iResult  == PASS)
								[ ] 
								[ ] //------------------Right Click on Accept Button to accept------------------
								[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,96,13)
								[ ] sCaption = C2RRightClick.AcceptTransaction.GetCaption()
								[ ] bMatch= MatchStr("*{sAcceptTransaction}*",sCaption)
								[+] if(bMatch==TRUE)
										[ ] ReportStatus("Check Caption of Right click Menu in C2R  of the transaction is 'Accept Transaction'",PASS,"Caption  of the transaction is '{sCaption}'  after right click in C2R")
										[ ] 
										[ ] //------------Accept Transaction From C2R into Register-----------------------
										[ ] C2RRightClick.AcceptTransaction.Pick()
										[ ] sleep(3)
										[ ] 
										[ ] //------------------Verify Status of the transaction should get chenged to Accepted in C2R
										[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
										[ ] 
										[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
										[ ] 
										[ ] sleep(3)
										[ ] 
										[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
										[ ] 
										[ ] bMatch= MatchStr("*{sAccepted}*{lsPayeeName}*",sActual)
										[ ] 
										[ ] 
										[+] if(bMatch==TRUE)
											[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the transaction '{lsPayeeName}' is 'Accepted' after clicking on Accept Button in C2R")
											[ ] 
											[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
											[ ] 			
											[ ] iResult=FindTransaction("MDI",lsPayeeName,ACCOUNT_INVESTING)
											[ ] 
											[+] if(iResult==PASS)
												[ ] 
												[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName}' got added in Register after clicking on Accept Button in C2R")
												[ ] 
											[+] else
												[+] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName}' not got added in Register after clicking on Accept Button in C2R")
														[ ] 
										[+] else
											[+] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the transaction '{lsPayeeName}'  is not 'Accepted' after clicking on Accept Button in C2R")
												[ ] 
										[ ] 
								[+] else
									[ ] ReportStatus("Check Caption of Right click Menu in C2R  of the transaction is 'Accept Transaction'",FAIL,"Caption  of the transaction is not equals to '{sCaption}'  after right click in C2R")
								[ ] 
								[ ] 
							[+] else
								[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
						[ ] 
					[+] else
						[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
[ ] //#######################################################################################
[ ] 
[ ] 
[+] //############# Right Click Menu-AcceptAll Transaction  in C2R of Investing Account##################
	[+] // TestCase Name:	Test43_VerifyInvestingAccountAcceptButtonOnTransaction()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test53_VerifyRightClickMenuAcceptAllTransactionC2R_InvestingAccount() appstate none
	[ ] 
	[-] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,iCounter
		[ ] STRING sFileName1,sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName, sExpected,sFileName2,sAccepted,sAcceptAllTransaction,sActual
		[ ] 
	[-] // Expected Values
		[ ] sFileName1 = "1_Vangurad_1 transaction.qfx"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction.qfx"
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transaction"
		[ ] sAccepted = "Accepted"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iResult=ImportWebConnectFile(sFileName1)
		[ ] 
		[-] if (iResult  == PASS)
			[ ] 
			[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_INVESTING)
			[ ] 
			[+] if (iResult  == PASS)
				[ ] 
				[ ] iCounter=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetItemCount()*2
				[ ] 
				[ ] //------------------Right Click on Accept Button to accept------------------
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,96,13)
				[ ] sCaption = C2RRightClick.AcceptAllTransaction.GetCaption()
				[ ] bMatch= MatchStr("*{sAcceptAllTransaction}*",sCaption)
				[-] if(bMatch==TRUE)
						[ ] ReportStatus("Check Caption of Right click Menu in C2R  of the transaction is 'Accept All Transactions'",PASS,"Caption  '{sCaption}'  after right click in C2R is available for the transaction")
						[ ] 
						[ ] //------------Accept All Transaction From C2R into Register-----------------------
						[ ] C2RRightClick.AcceptAllTransaction.Pick()
						[ ] sleep(3)
						[ ] 
						[ ] 
						[ ] Sleep(2)
						[ ] 
						[-] if(QuickenWindow.Exists())
							[ ] QuickenWindow.SetActive()
							[ ] SecuritiesComparisonMismatch.AcceptButton.Click()
						[ ] 
						[ ] MDIClient.AccountRegister.StaticText1.QWinChild.HideButton.Click()
						[ ] Sleep(2)
						[ ] //------------------Verify there are no transactions left to be Accepted in C2R-------------------------
						[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
						[ ] //sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
						[ ] sleep(3)
						[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
						[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
						[-] if(bMatch==TRUE)
							[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"There are no transactions left in the C2R to be Accepted")
						[-] else
							[ ] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"There are some  transactions left in the C2R that needs to be Accepted")
						[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
						[-] for(i=1;i<=ListCount(lsPayeeName);i++)			
								[ ] iResult=FindTransaction("MDI",lsPayeeName[i])
								[+] if(iResult==PASS)
									[ ] 
									[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
									[ ] 
								[+] else
									[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
				[-] else
					[ ] ReportStatus("Check Caption of Right click Menu in C2R  of the transaction is 'Accept Transaction'",FAIL,"Caption  '{sCaption}'  after right click in C2R is not availble")
				[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
				[ ] 
			[ ] 
		[ ] 
		[-] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
		[ ] 
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
[ ] //#######################################################################################
[ ] 
[+] //############# Right Click Menu-Delete Transaction  in C2R of Investing Account####################
	[+] // TestCase Name:	Test54_VerifyRightClickMenuDeleteTrxnsC2RInvesting()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test54_DeleteTransactionRightClickC2RInvesting() appstate none
	[ ] 
	[-] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,iCounter
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sExpected,sFileName2,sAccepted,sAcceptAllTransaction,sActual
		[ ] STRING sDataFile,sFileName1
		[ ] STRING sSourceFile
		[ ] 
	[ ] 
	[-] // Variable Definition
		[ ] sFileName1 = "1_Vangurad_1 transaction"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction"
		[ ] 
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccount="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transaction"
		[ ] sAccepted = "Accepted"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] 
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iResult=ImportWebConnectFile(sFileName1)
		[ ] 
		[-] if (iResult == PASS)
			[ ] 
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_INVESTING)
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] 
			[-] if(iSelect == PASS)
				[ ] 
				[ ] ReportStatus("Select the Online Investing Account",PASS,"{sAccount} Online Investing Account is selected successfully")
				[ ] 
				[ ] iResult=ImportWebConnectFile(sFileName2)
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.GetCaption()
				[ ] 
				[-] if(sCaption=='Delete')
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Delete-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
					[ ] 
				[-] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Delete-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] 
				[-] if(AlertMessage.Exists())
					[ ] 
					[ ] sMessage=AlertMessage.MessageText.GetText()
					[ ] 
					[+] if(sMessage =="Delete the download transaction?")
						[ ] 
						[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
						[ ] 
						[ ] AlertMessage.Yes.Click()
						[ ] 
						[ ] Sleep(2)
						[ ] 
						[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
						[ ] 
						[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
						[ ] 
						[ ] bMatch= MatchStr("*{lsPayeeName[2]}*",sActual)
						[ ] 
						[+] if(bMatch==FALSE)
							[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction got deleted Successfully ")
						[+] else
							[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction not got deleted Successfully ")
						[ ] 
						[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
						[ ] 
						[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
						[ ] 
						[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
						[ ] 
						[ ] Sleep(2)
						[ ] 
						[+] if(AlertMessage.Exists())
							[ ] 
							[ ] sMessage=AlertMessage.MessageText.GetText()
							[ ] 
							[+] if(sMessage =="Delete the download transaction?")
								[ ] 
								[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
								[ ] 
								[ ] AlertMessage.No.Click()
								[ ] 
								[ ] Sleep(2)
								[ ] 
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
								[ ] 
								[ ] bMatch= MatchStr("*{lsPayeeName[3]}*",sActual)
								[ ] 
								[ ] 
								[ ] 
								[ ] 
							[+] else
								[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
						[ ] 
					[+] else
						[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
					[ ] 
				[+] else
					[ ] ReportStatus("Check Delete transaction confirmation window",FAIL,"Delete transaction confirmation window is not present")
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Investing Account",FAIL,"{sAccount} Online Investing Account is selected successfully")
				[ ] 
				[ ] 
		[+] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
[ ] //#######################################################################################
[ ] 
[+] //############# Right Click Menu-UnMatch Transaction  in C2R of Investing Account####################
	[+] // TestCase Name:	Test54_VerifyRightClickMenuDeleteTrxnsC2RInvesting()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test55_UnMatchTransactionRightClickC2RInvesting() appstate none
	[ ] 
	[-] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,iCounter
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sExpected,sFileName2,sAccepted,sAcceptAllTransaction,sActual
		[ ] STRING sDataFile,sFileName1
		[ ] STRING sSourceFile
		[ ] 
	[ ] 
	[-] // Variable Definition
		[ ] sFileName1 = "1_Vangurad_1 transaction"
		[ ] sFileName2 = "Vanguard_Investing_2_Transaction"
		[ ] sDataFile = AUT_DATAFILE_PATH + "\" + sFileName + ".QFX"
		[ ] sSourceFile = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName + ".QFX"
		[ ] 
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccount="Investment at Vanguard Group"
		[ ] sAcceptAllTransaction = "Accept All Transaction"
		[ ] sAccepted = "Accepted"
		[ ] lsPayeeName = {"Vanguard Federal Money Market Fund","Vanguard Federal Money Market Fund"}
		[ ] 
	[ ] 
	[ ] 
	[ ] CopyFile(sSourceFile,sDataFile)
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] 
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] iResult=ImportWebConnectFile(sFileName1)
		[ ] 
		[-] if (iResult == PASS)
			[ ] 
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_INVESTING)
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] 
			[ ] 
			[-] if(iSelect == PASS)
				[ ] 
				[ ] ReportStatus("Select the Online Investing Account",PASS,"{sAccount} Online Investing Account is selected successfully")
				[ ] 
				[ ] iResult=ImportWebConnectFile(sFileName2)
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Verify the Edit Button for each transaction------------------
				[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
				[ ] 
				[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
				[ ] 
				[ ] sCaption=MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.GetCaption()
				[ ] 
				[-] if(sCaption=='Delete')
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",PASS,"Delete-Edit Menu option is present")
					[ ] 
					[ ] //MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
					[ ] 
					[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
					[ ] 
				[-] else
					[ ] ReportStatus("Check the contents of Options present on Edit Menu",FAIL,"Delete-Edit Menu option is not present")
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] 
				[-] if(AlertMessage.Exists())
					[ ] 
					[ ] sMessage=AlertMessage.MessageText.GetText()
					[ ] 
					[-] if(sMessage =="Delete the download transaction?")
						[ ] 
						[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
						[ ] 
						[ ] AlertMessage.Yes.Click()
						[ ] 
						[ ] Sleep(2)
						[ ] 
						[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
						[ ] 
						[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
						[ ] 
						[ ] bMatch= MatchStr("*{lsPayeeName[2]}*",sActual)
						[ ] 
						[+] if(bMatch==FALSE)
							[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",PASS,"'{lsPayeeName[i]}' transaction got deleted Successfully ")
						[+] else
							[ ] ReportStatus("Check the Edit Menu-Delete for transaction in C2R",FAIL,"'{lsPayeeName[i]}' transaction not got deleted Successfully ")
						[ ] 
						[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
						[ ] 
						[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Click(2,1138,42)
						[ ] 
						[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.Delete.Pick()
						[ ] 
						[ ] Sleep(2)
						[ ] 
						[+] if(AlertMessage.Exists())
							[ ] 
							[ ] sMessage=AlertMessage.MessageText.GetText()
							[ ] 
							[+] if(sMessage =="Delete the download transaction?")
								[ ] 
								[ ] ReportStatus("Delete -Edit menu in C2R",PASS,"Edit Menu-Delete downloaded transactions from C2R")
								[ ] 
								[ ] AlertMessage.No.Click()
								[ ] 
								[ ] Sleep(2)
								[ ] 
								[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
								[ ] 
								[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(3))
								[ ] 
								[ ] bMatch= MatchStr("*{lsPayeeName[3]}*",sActual)
								[ ] 
								[ ] 
								[ ] 
								[ ] 
							[+] else
								[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
						[ ] 
					[+] else
						[ ] ReportStatus("Delete -Edit menu in C2R",FAIL,"Edit Menu-Delete downloaded transactions from C2R message is not present")
				[+] else
					[ ] ReportStatus("Check Delete transaction confirmation window",FAIL,"Delete transaction confirmation window is not present")
				[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Investing Account",FAIL,"{sAccount} Online Investing Account is selected successfully")
				[ ] 
				[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify FI LOGO, Website link, Website Help Link in C2R of Investing Account ##############
	[+] // TestCase Name:	Test20_VerifyFILogoAndWebsiteLinkC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test56_VerifyFILogoAndWebsiteLinkC2RInvesting() appstate none
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName,sCaption, sExpected,sLogo,sFIWebLink,SFIWebHelpLink
	[ ] 
	[-] // Expected Values
		[ ] sAccount="Investment at Vanguard Group"
		[ ] sFIWebLink = "Web site"
		[ ] iCount=0
		[ ] iCount1=0
		[ ] 
	[-] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] sleep(1)
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[-] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[-] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[-] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[-] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] //  Verify that Account is shown on account bar
				[ ] // sHandle = Str(QuickenMainWindow.QWNavigator.QWNavBtnTray.QWAcctBarHolder.QWListViewer1.ListBox.GetHandle())
				[ ] // sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,"4")
				[ ] // bMatch = MatchStr("*{sAccountName}*{sEndingBalance}*", sActual)
				[-] if(bMatch == TRUE)
					[ ] //ReportStatus("Validate Accounts in Account Bar", PASS, "{sAccountName} account is available with ending balance - {sEndingBalance}")
					[ ] 
					[ ] 
					[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_INVESTING)
					[-] if (iResult  == PASS)
						[ ] 
						[-] if(MDIClient.AccountRegister.StaticText1.QWinChild.DownloadedTransactions.Exists(5))
							[ ] 
							[ ] sLogo = MDIClient.AccountRegister.StaticText1.QWinChild.FILOGO.GetCaption()
							[ ] 
							[-] if(sLogo!=NULL)
								[ ] MDIClient.AccountRegister.StaticText1.QWinChild.FILOGO.Click()
								[ ] sleep(3)
								[ ] OnlineCenter.Close()
								[ ] ReportStatus("Validate FI LOGO", PASS, "FI LOGO exists")
								[ ] 
								[ ] //------------------Verify FI website link
								[ ]  iCounter = 1
								[+] for(i=0;i<=iCounter;i=i+1)
									[ ] sHandle = str(MDIClient.AccountRegister.StaticText1.QWinChild.QWListViewer.ListBox.GetHandle())
									[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(i))
									[ ] sleep(2)
									[ ] bMatch = MatchStr("{sFIWebLink}", sActual)
									[+] if(bMatch==TRUE)
										[ ] iCount=iCount+1
								[+] if(iCount>0)
									[ ] ReportStatus("Validate FI Website Link", PASS, "FI link exist and is correct")
								[+] else
									[ ] ReportStatus("Validate FI Website Link", FAIL, "FI link is not  correct")
								[ ] bMatch=FALSE
								[ ] 
								[+] for(i=0;i<=iCounter;i=i+1)
									[ ] sHandle = str(MDIClient.AccountRegister.StaticText1.QWinChild.QWListViewer.ListBox.GetHandle())
									[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(i))
									[ ] bMatch = MatchStr("{SFIWebHelpLink}", sActual)
									[+] if(bMatch==TRUE)
										[ ] iCount1=iCount1+1
								[+] if(iCount1>0)
									[ ] ReportStatus("Validate FI Website Link", PASS, "FI help link exist and is correct")
								[+] else
									[ ] ReportStatus("Validate FI Website Link", FAIL, "FI help  link is not  correct")
									[ ] 
									[ ] 
							[+] else
								[ ] ReportStatus("Validate FI LOGO", FAIL, "FI LOGO do not exists, Failed to locate FI LOGO")
						[+] else
							[ ] ReportStatus("Validate DownloadedTransactions tab", FAIL, "DownloadedTransactions tab is not available")
							[ ] 
					[+] else
						[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
					[ ] 
					[ ] 
				[+] else
					[ ] ReportStatus("Validate Accounts in Account Bar", FAIL, "{sActual} account is not available in Account bar")
					[ ] 
				[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Verify Last Download link and Date  in C2R of Investing Account ########################
	[+] // TestCase Name:	Test21_VerifyLastDownloadLink()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] // This testcase it will Verify FI LOGO ,FI Website link and FI WEbsite Help Link.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If no error occurs while deleting and creating file							
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Dec 3, 2013		Girish	created
	[ ] // ********************************************************
[+] testcase Test57_VerifyLastDownloadLinkInvesting() appstate none
	[ ] 
	[+] // Variable declaration
		[ ] INTEGER iCreateDataFile,iAccount,i,iCount,iCount1
		[ ] BOOLEAN bFlag,bVerify
		[ ] STRING sOnlineTransactionDataFile, sFilePath,sFileName,sAccount,sAccountName,sCaption, sExpected,sLogo,sFIWebLink,SFIWebHelpLink,sLastDownloadText
		[ ] STRING sDate 
		[ ] sDate = DateStr () 
		[ ] 
	[+] // Expected Values
		[ ] sFileName = "WellsFargo_Checking.qfx"
		[ ] sFilePath = AUT_DATAFILE_PATH + "\WebConnect_Files\" + sFileName
		[ ] sOnlineTransactionDataFile= "OnlineTransactionFile"
		[ ] sAccountName="Checking at Wells Fargo"
		[ ] sFIWebLink = "<a href=http://www.wellsfargo.com/> wellsfargo.com</a>"
		[ ] SFIWebHelpLink = "<a href=http://www.wellsfargo.com/per/wfonline/quicken/index.jhtml> Help</a>"
		[ ] sLastDownloadText="Last download"
		[ ] iCount=0
		[ ] iCount1=0
		[ ] 
	[+] if(QuickenWindow.Exists(5))
		[ ] // Navigate to File > File Import > Web Connect File
		[ ] QuickenWindow.SetActive()
		[ ] sleep(1)
		[ ] QuickenWindow.File.Click()
		[ ] QuickenWindow.File.FileImport.Click()
		[ ] QuickenWindow.File.FileImport.WebConnectFile.Select()
		[ ] 
		[ ] // Import web connect file
		[+] if(ImportExportQuickenFile.Exists(SHORT_SLEEP))
			[ ] ImportExportQuickenFile.SetActive()
			[ ] ImportExportQuickenFile.FileName.SetText(sFilePath)
			[ ] ImportExportQuickenFile.Open.Click()
			[ ] 
			[+] if(ImportDownloadedTransactions.Exists(120))
				[ ] ImportDownloadedTransactions.SetActive()
				[ ] // Check if default Account name is not displayed, enter account name in text field
				[ ] sAccount=ImportDownloadedTransactions.Panel2.TextField.GetText()
				[+] if(sAccount=="")
					[ ] ImportDownloadedTransactions.Panel2.TextField.SetText(sAccountName)
				[ ] // Click on Import
				[ ] ImportDownloadedTransactions.Import.Click()
				[ ] 
				[+] if(OneStepUpdateSummary.Exists(20))
					[ ] OneStepUpdateSummary.SetActive()
					[ ] OneStepUpdateSummary.Close()
				[+] if(FreeUpdateToQuicken.Exists(2))
					[ ] FreeUpdateToQuicken.SetActive()
					[ ] FreeUpdateToQuicken.UpdateLater.Click()
				[ ] 
				[ ] iResult=SelectAccountFromAccountBar(sAccountName,ACCOUNT_BANKING)
				[+] if (iResult  == PASS)
					[ ] 
					[+] if(MDIClient.AccountRegister.StaticText1.QWinChild.DownloadedTransactions.Exists(5))
						[ ] 
						[ ] sHandle = str(MDIClient.AccountRegister.StaticText1.QWinChild.QWListViewerLastDownload.ListBox.GetHandle())
						[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
						[ ] //Match Last Download Date Link and DAte
						[ ] bMatch = MatchStr("*{sLastDownloadText}*{sDateStamp}*", sActual)
						[+] if(bMatch==TRUE)
							[ ] ReportStatus("Validate Last Download Link and Date", PASS, "Last Download Link and Date are present and are correct")
							[ ] // Click Last Download Link
							[ ] MDIClient.AccountRegister.StaticText1.QWinChild.QWListViewerLastDownload.ListBox.Click(1,38,7)
							[ ] sleep(3)
							[ ] 
							[+] if(OneStepUpdateSummary.Exists(10))
								[ ] OneStepUpdateSummary.SetActive()
								[ ] OneStepUpdateSummary.Close()
								[ ] ReportStatus("Verification of OSU Summary Window", PASS, "OSU Summary window is opened and closed")
							[+] else
								[ ] ReportStatus("Verification of OSU Summary Window", FAIL, "Failed to open OSU Summary window")
						[+] else
							[ ] ReportStatus("Validate Last Download Link and Date", FAIL, "Last Download Link and Date are not  correct")
					[+] else
						[ ] ReportStatus("Validate DownloadedTransactions tab", FAIL, "DownloadedTransactions tab is not available")
						[ ] 
				[+] else
					[ ] ReportStatus("Verify Accounts in Account Bar", FAIL, "{sAccountName} account couldn't be selected from Account bar")
			[ ] 
			[+] else
				[ ] ReportStatus("Validate ImportDownloadedTransactions Window", FAIL, "ImportDownloadedTransactions window is not available") 
			[ ] 
		[+] else
			[ ] ReportStatus("Validate 'Import Web Connect File' Window", FAIL, "'Import Web Connect File' Window is not available") 
			[ ] 
			[ ] 
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#######################################################################################
[ ] 
[+] //############# Update Transactions button in C2R Investing Account#################################
	[ ] // ********************************************************
	[-] // TestCase Name:	Test30_UpdateTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Update Transactions' button in C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of 'Update Transactions' button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test58_UpdateTransactionInC2R() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] 
	[ ] sAccount = "Checking 15" 
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[+] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.UpdateTransactions.Click()
			[ ] WaitforState(OnlineUpdateAccount,TRUE,3)
			[ ] 
			[-] if(OnlineUpdateAccount.Exists())
				[ ] ReportStatus("Verify Online Update for account Dialog ", PASS , "Online Update for Account Dialog is present ")
				[ ] OnlineUpdateAccount.SetActive()
				[ ] OnlineUpdateAccount.Close()
				[ ] 
			[-] else
				[ ] ReportStatus("Verify Online Update for account Dialog ", FAIL , "Online Update for Account Dialog is not present ")
			[ ] 
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[+] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //##########################################################################################
[ ] 
[+] //############# Investing Account -  Online payment button in C2R ###################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test31A_OnlinePaymentButtonInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Set up online Payment ' button in C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of  'Set up online Payment 'button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test59A_OnlinePaymentButtonInC2RInvesting() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage
	[ ] sAccount = "Checking 17" 
	[ ] sTextMessage="Finish accepting transactions first and then try again"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.SetUpMakeOnlinePayment.Click()
			[ ] WaitforState(AlertMessage,TRUE,3)
			[ ] 
			[-] if(AlertMessage.Exists())
				[ ] ReportStatus("Verify Alert Message for Setup Online Payment", FAIL , " Alert Message for Setup Online Payment is present ")
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[ ] bMatch=MatchStr("*{sTextMessage}*",sMessage)
				[ ] 
				[+] if(bMatch==TRUE)
					[ ] 
					[ ] ReportStatus("Online payment button in C2R",PASS,"Online payment button from C2R")
					[ ] 
					[ ] AlertMessage.OK.Click()
				[-] else
					[ ] ReportStatus("Online payment button in C2R",FAIL,"Online payment button from C2R")
			[ ] 
			[ ] 
			[-] else
				[ ] ReportStatus("Verify Alert Message for Setup Online Payment", FAIL , " Alert Message for Setup Online Payment is not present ")
			[ ] 
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //############# Investing Account -  Online payment button in C2R #########################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test31B_OnlinePaymentButtonInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Set up online Payment ' button in C2R window.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of  'Set up online Payment 'button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test59B_OnlinePaymentButtonInC2RInvesting() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sText
	[ ] STRING sFileName = "DC_EWC_WEBCONNECT_CLOUD"
	[ ] STRING sDataFile = AUT_DATAFILE_PATH + "\" + sFileName + ".QDF"
	[ ] STRING sSourceFile = AUT_DATAFILE_PATH + "\C2R Data File\" + sFileName + ".QDF"
	[ ] 
	[ ] sAccount = "BUSINESS CHECKING XX0124" 
	[ ] sText="Quicken Bill Pay"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------ Create Data File------------------
		[ ] iOpenDataFile = OpenDataFile(sFileName)
		[ ] 
		[ ] // ------------------Report Staus If Data file opened successfully------------------
		[-] if ( iOpenDataFile  == PASS)
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is opened")
			[ ] QuickenWindow.SetActive()
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.OneStepUpdate.Select()
			[ ] 
			[-] if(OneStepUpdate.Exists(SHORT_SLEEP))
				[ ] ReportStatus("Verify IAMS is Registration ", PASS, "IAMS Registration is Done")
			[-] else
				[ ] RegisterQuickenConnectedServices()
			[ ] 
		[-] else 
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is not opened")
		[ ] 
		[ ] 
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.SetUpMakeOnlinePayment.Click()
			[ ] 
			[ ] Sleep(1)
			[ ] 
			[-] if(ActivateOnlineBillPay.Exists(SHORT_SLEEP))
				[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",PASS,"Activate Online Bill Pay window is displayed successfully")
				[ ] ActivateOnlineBillPay.SetActive()
				[ ] ActivateOnlineBillPay.ActivateNow.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[-] if(AddAnyAccount.Exists(SHORT_SLEEP))
					[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",PASS,"Add account window is displayed successfully")
					[ ] 
					[ ] 
					[ ] sCaption=AddAnyAccount.QuickenBillPay.GetCaption()
					[ ] 
					[+] if(sText==sCaption)
						[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",PASS,"Add account window for 'Quicken Bill Pay' is displayed successfully")
						[ ] 
						[ ] 
					[+] else
						[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",FAIL,"Add account window for 'Quicken Bill Pay' is not displayed successfully")
					[ ] 
					[ ] AddAnyAccount.Close()
					[ ] 
					[-] if(AlertMessage.Exists())
						[ ] AlertMessage.SetActive()
						[ ] AlertMessage.OK.Click()
						[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",FAIL,"Add account window is not displayed successfully")
				[ ] 
			[-] else
				[ ] ReportStatus("Verify the Add account flow for 'Quicken Bill Pay'",FAIL,"Activate Online Bill Pay window is not displayed successfully")
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //####### Investing Account -  Make an online payment button in C2R ########################################
	[ ] // ********************************************************
	[-] // TestCase Name:	Test32_MakeOnlinePaymentButtonInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify availability and functionality of 'Make an online payment' button in C2R window..
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If availability and functionality of  'Make an online payment' button in C2R window.			
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test60_MakeOnlinePaymentButtonInC2RInvesting() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sText
	[ ] sAccount = "BUSINESS ECONOMY CHECKING XX6154" 
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] MDIClient.AccountRegister.QWinChild.SetUpMakeOnlinePayment.Click()
			[ ] 
			[ ] WaitforState(OnlineCenter,TRUE,3)
			[ ] 
			[-] if(OnlineCenter.Exists())
				[ ] ReportStatus("Verify Online Center window opened after clicking Make a Online Payment", PASS , " Online Center window opened after clicking Make a Online Payment")
				[ ] 
				[ ] sText=OnlineCenter.Account.GetText()
				[ ] 
				[-] if(sText==sAccount)
					[ ] 
					[ ] ReportStatus("Verify the Account name for which make a Online Payment is clicked",PASS,"Account Name on Online Center is similar to account for which Make a Online Payment is clicked")
					[ ] 
					[ ] OnlineCenter.Close()
					[ ] 
				[-] else
					[ ] ReportStatus("Verify the Account name for which make a Online Payment is clicked",FAIL,"Account Name{sText} on Online Center is not similar to account {sAccount} for which Make a Online Payment is clicked")
			[-] else
				[ ] ReportStatus("Verify Online Center window opened after clicking Make a Online Payment", FAIL , " Online Center window is not opened after clicking Make a Online Payment")
			[ ] 
			[ ] 
			[ ] 
		[+] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //######## Investing Account -   Pop up for transaction over a year old in C2R ##################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test61_OneYearTransactionInC2RInvesting() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage
	[ ] STRING sFileName = "Compare2Register"
	[ ] STRING sDataFile = AUT_DATAFILE_PATH + "\" + sFileName + ".QDF"
	[ ] STRING sSourceFile = AUT_DATAFILE_PATH + "\C2R Data File\" + sFileName + ".QDF"
	[ ] 
	[ ] sAccount = "Checking at Wells Fargo Bank" 
	[ ] sTextMessage="You are entering a transaction over a year"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------ Create Data File------------------
		[ ] iOpenDataFile = OpenDataFile(sFileName)
		[ ] 
		[ ] // ------------------Report Staus If Data file opened successfully------------------
		[-] if ( iOpenDataFile  == PASS)
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is opened")
			[ ] QuickenWindow.SetActive()
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.OneStepUpdate.Select()
			[ ] 
			[-] if(OneStepUpdate.Exists(SHORT_SLEEP))
				[ ] ReportStatus("Verify IAMS is Registration ", PASS, "IAMS Registration is Done")
			[-] else
				[ ] RegisterQuickenConnectedServices()
			[ ] 
		[-] else 
			[ ] ReportStatus("Validate Data File ", iOpenDataFile, "Data file -  {sDataFile} is not opened")
		[ ] 
		[ ] 
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.Accept.Click()
			[ ] 
			[ ] sleep(1)
			[ ] 
			[-] if(AlertMessage.Exists(SHORT_SLEEP))
				[ ] 
				[ ] sMessage=AlertMessage.MessageText.GetText()
				[ ] 
				[ ] bMatch=MatchStr("*{sTextMessage}*",sMessage)
				[ ] 
				[-] if(bMatch==TRUE)
					[ ] ReportStatus("Verify Quicken prompts message 'user tries to enter transaction over a year old'",PASS,"Quicken prompted message 'user tries to enter transaction over a year old' successfully ")
				[-] else
					[ ] ReportStatus("Verify Quicken prompts message 'user tries to enter transaction over a year old'",FAIL,"Quicken not prompted message 'user tries to enter transaction over a year old' successfully ")
				[ ] 
				[ ] AlertMessage.SetActive()
				[ ] AlertMessage.No.Click()
				[ ] 
			[-] else
				[ ] ReportStatus("Verify Alert Message",FAIL,"Alert Message is not prompted")
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //######## Investing Account - Download transactions with the account open for Direct Connect FI.################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test62_DownloadTransactionManualtoDCInvesting() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage,sTransactionDownload,sUserName,sPassword,sAccountNumber,sFIName
	[ ] 
	[ ] sAccount = "Checking 01 Account" 
	[ ] sTextMessage="You are entering a transaction over a year"
	[ ] sFIName = "Mission Federal Credit Union"
	[ ] sTransactionDownload = "Activate Downloads"
	[ ] sUserName="91058197"
	[ ] sPassword="Raiders2030"
	[ ] sAccountNumber="91058197-09"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.AccountList.Select()
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=NavigateToAccountDetails(sAccount)
			[ ] 
			[ ] 
			[+] if(iSelect==PASS)
				[ ] ReportStatus("Verify that Account Details is opened ",PASS,"Account Details Window is opened successfully")
				[ ] 
				[ ] AccountDetails.FinancialInstitution.SetText(sFIName)
				[ ] 
				[ ] AccountDetails.AccountNumber.SetText(sAccountNumber)
				[ ] 
				[ ] AccountDetails.OK.Click()
				[ ] 
				[+] if(AccountList.Exists())
					[ ] ReportStatus("Verify that Account List is present ",PASS,"Account List Window is present")
					[ ] 
					[ ] AccountList.SetActive()
					[ ] AccountList.Maximize()
					[ ] 
					[ ] sHandle = Str(AccountList.QWinChild.Order.ListBox.GetHandle())
					[ ] 
					[-] for(i=0;i<AccountList.QWinChild.Order.ListBox.GetItemCount();i++)
						[ ] 
						[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,Str(i))
						[ ] 
						[ ] bMatch=MatchStr("{sAccount}",sActual)
						[ ] 
						[+] if(bMatch==TRUE)
							[ ] ReportStatus("Verify Account is present in Account List",PASS,"Account{sAccount} is present in Account List")
							[ ] break
						[ ] 
						[ ] 
					[ ] bMatch=MatchStr("{sTransactionDownload}",sActual)
					[ ] 
					[+] if(bMatch==TRUE)
						[ ] ReportStatus("Verify Transaction Download changes",PASS,"Transaction Download status change to {sTransactionDownload} in Account List")
						[ ] 
						[ ] AccountList.QWinChild.Order.ListBox.Click(1,1155, 293)
						[ ] 
						[ ] iResult=ActivateDownload(sUserName,sPassword)
						[ ] 
						[+] if(iResult==PASS)
							[ ] 
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
							[ ] 
							[ ] AccountList.SetActive()
							[ ] AccountList.Close()
							[ ] 
							[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
							[ ] 
							[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
							[ ] 
							[ ] bMatch=MatchStr("*{sMessage}*",sActual)
							[ ] 
							[+] if(bMatch==FALSE)
								[ ] 
								[ ] ReportStatus("Verify Transactions in C2R",PASS,"Transactions are downloaded in C2R")
							[+] else
								[ ] ReportStatus("Verify Transactions in C2R",FAIL,"Transactions are not downloaded in C2R")
							[ ] 
						[-] else
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
						[ ] 
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Transaction Download changes",FAIL,"Transaction Download status not change to {sTransactionDownload} in Account List")
						[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Verify that Account List is present ",FAIL,"Account List Window is not present")
			[-] else
				[ ] ReportStatus("Verify that Account Details is opened ",FAIL,"Account Details Window is opened successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //#####Investing Account - Download transactions with the account open for  Express Web Connect  FI.##############
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test63_DownloadTransactionManualtoEWCInvesting() appstate none
	[ ] 
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sTextMessage,sTransactionDownload,sUserName,sPassword,sAccountNumber,sFIName
	[ ] 
	[ ] sAccount = "Checking 02 Account" 
	[ ] sTextMessage="You are entering a transaction over a year"
	[ ] sFIName = "CCMintBank"
	[ ] sTransactionDownload = "Activate Downloads"
	[ ] sUserName="testuser13"
	[ ] sPassword="testuser13"
	[ ] sAccountNumber="18"
	[ ] iXcord = 1038
	[ ] iYcord = 30
	[ ] sMessage="There are no downloaded transactions to accept." 
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Select the Online Checking Account------------------
		[ ] iSelect = SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect == PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] QuickenWindow.Tools.Click()
			[ ] QuickenWindow.Tools.AccountList.Select()
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=NavigateToAccountDetails(sAccount)
			[ ] 
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Verify that Account Details is opened ",PASS,"Account Details Window is opened successfully")
				[ ] 
				[ ] AccountDetails.FinancialInstitution.SetText(sFIName)
				[ ] 
				[ ] AccountDetails.AccountNumber.SetText(sAccountNumber)
				[ ] 
				[ ] AccountDetails.OK.Click()
				[ ] 
				[-] if(AccountList.Exists())
					[ ] ReportStatus("Verify that Account List is present ",PASS,"Account List Window is present")
					[ ] 
					[ ] AccountList.SetActive()
					[ ] AccountList.Maximize()
					[ ] 
					[ ] sHandle = Str(AccountList.QWinChild.Order.ListBox.GetHandle())
					[ ] 
					[-] for(i=0;i<AccountList.QWinChild.Order.ListBox.GetItemCount();i++)
						[ ] 
						[ ] sActual= QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,Str(i))
						[ ] 
						[ ] bMatch=MatchStr("{sAccount}",sActual)
						[ ] 
						[-] if(bMatch==TRUE)
							[ ] ReportStatus("Verify Account is present in Account List",PASS,"Account{sAccount} is present in Account List")
							[ ] break
						[ ] 
						[ ] 
					[ ] bMatch=MatchStr("{sTransactionDownload}",sActual)
					[ ] 
					[-] if(bMatch==TRUE)
						[ ] ReportStatus("Verify Transaction Download changes",PASS,"Transaction Download status change to {sTransactionDownload} in Account List")
						[ ] 
						[ ] AccountList.QWinChild.Order.ListBox.Click(1,1155, 293)
						[ ] 
						[ ] iResult=ActivateDownload(sUserName,sPassword)
						[ ] 
						[+] if(iResult==PASS)
							[ ] 
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
							[ ] 
							[ ] AccountList.SetActive()
							[ ] AccountList.Close()
							[ ] 
							[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
							[ ] 
							[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
							[ ] 
							[ ] bMatch=MatchStr("*{sMessage}*",sActual)
							[ ] 
							[+] if(bMatch==FALSE)
								[ ] 
								[ ] ReportStatus("Verify Transactions in C2R",PASS,"Transactions are downloaded in C2R")
							[+] else
								[ ] ReportStatus("Verify Transactions in C2R",FAIL,"Transactions are not downloaded in C2R")
							[ ] 
						[-] else
							[ ] ReportStatus("Verify Activate Downloads is done",PASS,"Manual account got linked with Online Checking account successfully.")
						[ ] 
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Transaction Download changes",FAIL,"Transaction Download status not change to {sTransactionDownload} in Account List")
						[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Verify that Account List is present ",FAIL,"Account List Window is not present")
			[-] else
				[ ] ReportStatus("Verify that Account Details is opened ",FAIL,"Account Details Window is opened successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //#####Importing web connect files twice, Activate One Step Update pop up is displayed.########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test64_ImportWebConnectTwiceInvesting() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"BOA 1","BOA 2"}
	[ ] sAccount="Checking at Bank of America*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[-] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] ActivateOneStepUpdate.Close()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //###############################################################################################
[ ] 
[+] //#####Importing web connect files twice, on Activate One Step Update select No.###########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test65_ImportWebConnectTwiceSelectNoInvesting() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"MFCU 1","MFCU 2"}
	[ ] sAccount="Checking at Mission*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[-] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] 
						[ ] ActivateOneStepUpdate.No.Select("No,")
						[ ] 
						[ ] ActivateOneStepUpdate.Close()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //##### Importing web connect files twice, on Activate One Step Update select Yes.###########################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test66_ImportWebConnectTwiceSelectYesInvesting() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"MFCU 1","MFCU 2"}
	[ ] sAccount="Checking at Mission*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.Edit.Click()
		[ ] QuickenWindow.Edit.Preferences.Select()
		[ ] 
		[+] if(Preferences.Exists(5))
			[ ] Preferences.SelectPreferenceType1.ListBox.Select(8)
			[ ] Preferences.ResetQuickenWarnings.Click()
			[ ] Preferences.OK.Click()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[-] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] 
						[ ] ActivateOneStepUpdate.Yes.Select("Yes,")
						[ ] 
						[ ] ActivateOneStepUpdate.Activate.Click()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //#####Accept transactions one by one using 'Enter' key for Online Account##################################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[-] testcase Test67_AcceptTrxnsEnterKeyOnline() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] STRING sPayeeName
	[ ] sAccount ="Checking Account 19"
	[ ] sAccepted="Accepted"
	[ ] sPayeeName="Matt"
	[ ] 
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] 
		[ ] 
		[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
		[ ] 
		[-] if(iSelect==PASS)
			[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
			[ ] 
			[ ] sHandle = Str(MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.GetHandle())
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_SELECTROW", sHandle,str(0))
			[ ] 
			[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.DownloadedTransactions.ListBox.TypeKeys(KEY_ENTER)
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] sActual = QwAutoExecuteCommand("LISTBOX_GETFULLROW", sHandle,str(0))
			[ ] 
			[ ] bMatch= MatchStr("*{sAccepted}*",sActual)
			[ ] 
			[-] if(bMatch==TRUE)
				[ ] ReportStatus("Check Status of the transaction is 'Accepted'",PASS,"Status of the transaction '{lsPayeeName[i]}' is 'Accepted' after clicking on Accept Button in C2R")
				[ ] 
				[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
				[ ] iResult=FindTransaction(WindowName,sPayeeName)
				[-] if(iResult==PASS)
					[ ] 
					[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R")
				[-] else
					[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R")
				[ ] 
			[+] else
				[ ] ReportStatus("Check Status of the transaction is 'Accepted'",FAIL,"Status of the transaction '{lsPayeeName[i]}'  is not 'Accepted' after clicking on Accept Button in C2R")
				[ ] //------------------Verify in Register whether the Transaction is Accepted------------------
				[ ] iResult=FindTransaction("MDI",lsPayeeName[i])
				[ ] 
				[+] if(iResult==PASS)
					[ ] 
					[ ] ReportStatus("Check transaction got added in Register",PASS,"Transaction '{lsPayeeName[i]}' got added in Register after clicking on Accept Button in C2R ,Still status is not changed to Accepted")
				[+] else
					[ ] ReportStatus("Check transaction got added in Register",FAIL,"Transaction'{lsPayeeName[i]}' not got added in Register after clicking on Accept Button in C2R,as status is not changed to Accepted")
				[ ] 
				[ ] 
			[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
			[ ] 
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[+] //#####Accept transactions one by one using 'Enter' for Online Account for WC Account .######################
	[ ] // ********************************************************
	[+] // TestCase Name:	Test33_OneYearTransactionInC2R()
		[ ] //
		[ ] // DESCRIPTION:
		[ ] //Verify that Quicken prompts user when user tries to enter transaction over a year old.
		[ ] 
		[ ] //
		[ ] // PARAMETERS:		None
		[ ] //
		[ ] // RETURNS:			        Pass 	If Quicken prompts user when user tries to enter transaction over a year old.		
		[ ] //						Fail		If any error occurs
		[ ] //
		[ ] // REVISION HISTORY:
		[ ] // 	  Nov 18, 2013		Anagha	created
	[ ] // ********************************************************
	[ ] 
[+] testcase Test68_AcceptTrxnsEnterKeyWCInvesting() appstate none
	[ ] //------------------ Variable declaration & definition------------------
	[ ] LIST OF STRING lsFileName
	[ ] 
	[ ] lsFileName = {"MFCU 1","MFCU 2"}
	[ ] sAccount="Checking at Mission*"
	[-] if(QuickenWindow.Exists())
		[ ] 
		[ ] QuickenWindow.SetActive()
		[ ] QuickenWindow.Edit.Click()
		[ ] QuickenWindow.Edit.Preferences.Select()
		[ ] 
		[+] if(Preferences.Exists(5))
			[ ] Preferences.SelectPreferenceType1.ListBox.Select(8)
			[ ] Preferences.ResetQuickenWarnings.Click()
			[ ] Preferences.OK.Click()
		[ ] 
		[ ] //------------------Navigate to Home tab------------------
		[ ] NavigateQuickenTab(sTAB_HOME)
		[ ] 
		[ ] //------------------Import a Web Connect File for first time------------------
		[ ] iResult = ImportWebConnectFile(lsFileName[1])
		[ ] 
		[+] if(iResult == PASS)
			[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first time is imported successfully")
			[ ] 
			[ ] Sleep(2)
			[ ] 
			[ ] iSelect=SelectAccountFromAccountBar(sAccount,ACCOUNT_BANKING)	
			[ ] 
			[-] if(iSelect==PASS)
				[ ] ReportStatus("Select the Online Checking Account",PASS,"{sAccount} Online Checking Account is selected successfully")
				[ ] 
				[ ] //------------------Click on Accept All Button for accepting all the transactions------------------
				[ ] 
				[ ] MDIClient.AccountRegister.QWSnapHolder1.StaticText1.StaticText2.AcceptAll.Click()
				[ ] 
				[ ] Sleep(2)
				[ ] 
				[ ] //------------------Import a Web Connect File for second time------------------
				[ ] iResult = ImportWebConnectFile(lsFileName[2])
				[ ] 
				[-] if(iResult == PASS)
					[ ] ReportStatus("Import Web Connect File ",PASS,"Web Connect file for first is imported successfully")
					[ ] 
					[-] if(ActivateOneStepUpdate.Exists())
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
						[ ] ActivateOneStepUpdate.SetActive()
						[ ] 
						[ ] ActivateOneStepUpdate.Yes.Select("Yes,")
						[ ] 
						[ ] ActivateOneStepUpdate.Activate.Click()
						[ ] 
					[-] else
						[ ] ReportStatus("Verify Activate One Step Update window",PASS,"Activate One Step Update screen is displayed successfully")
					[ ] 
					[ ] 
				[-] else
					[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for second time is not imported successfully")
					[ ] 
				[ ] 
				[ ] 
			[-] else
				[ ] ReportStatus("Select the Online Checking Account",FAIL,"{sAccount} Online Checking Account is not selected successfully")
				[ ] 
				[ ] 
			[ ] 
		[-] else
			[ ] ReportStatus("Import Web Connect File ",FAIL,"Web Connect file for first time is not imported successfully")
	[-] else
		[ ] ReportStatus("Validate Quicken Main Window", FAIL, "Quicken Main Window is not available") 
	[ ] 
	[ ] 
[ ] //#############################################################################################
[ ] 
[ ] 
[ ] 
[ ] 
